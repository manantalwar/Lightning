[{"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\index.js":"1","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\App.js":"2","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Home.js":"3","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Navbar.js":"4","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Filter.js":"5","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Validate.js":"6","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Graphs.js":"7"},{"size":240,"mtime":1665850763007,"results":"8","hashOfConfig":"9"},{"size":554,"mtime":1665860417980,"results":"10","hashOfConfig":"9"},{"size":1482,"mtime":1665853786894,"results":"11","hashOfConfig":"9"},{"size":613,"mtime":1666196793252,"results":"12","hashOfConfig":"9"},{"size":5562,"mtime":1666998834556,"results":"13","hashOfConfig":"9"},{"size":2658,"mtime":1666294613632,"results":"14","hashOfConfig":"9"},{"size":11676,"mtime":1666369531514,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"16vd86g",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\index.js",[],[],[],"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\App.js",[],[],"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Home.js",["40"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Navbar from './Navbar';\r\nimport './Home.css';\r\n\r\nconst Home = ({props}) => {\r\n    const [hover1, setHover1] = useState(false);\r\n    const [hover2, setHover2] = useState(false);\r\n    const page = \"Home\"\r\n    return (  \r\n        <div className=\"home\">\r\n            <Navbar page={page}/>\r\n            <div className=\"container\">\r\n                <div className=\"box\">\r\n                    <button \r\n                        className=\"mainbtn\" \r\n                        onMouseEnter={() => setHover1(true)}\r\n                        onMouseLeave={() => setHover1(false)}>\r\n                        {!hover1 && <div>Validation</div>}\r\n                        {hover1 && <div>Validating simulation data as compared to base case data. Displays graphs comparing the data sets and shows useful statitsics comparing the data.</div>}\r\n                    </button>\r\n                    <button \r\n                        className=\"mainbtn\"\r\n                        onMouseEnter={() => setHover2(true)}\r\n                        onMouseLeave={() => setHover2(false)}>\r\n                        {!hover2 && <div>Simulation</div>}\r\n                        {hover2 && <div>Filters datasets based on chosen queries and displays graphs and useful information about remaining nodes.</div>}\r\n                        \r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Navbar.js",[],[],"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Filter.js",[],[],"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Validate.js",[],[],"C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\src\\Graphs.js",["41","42","43","44","45"],[],"import React from 'react';\r\nimport Highcharts, { chart } from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst heat = require('highcharts/modules/heatmap');\r\nheat(Highcharts);\r\n\r\nexport class ScatterPlot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const options = {\r\n            title: {\r\n                text: 'Scatter Plot with Regression Line'\r\n            },\r\n            xAxis: {\r\n                min: 0,\r\n                max: 5\r\n            },\r\n            yAxis: {\r\n                min: 0\r\n            },\r\n            series: [{\r\n                type: 'line',\r\n                name: 'Regression Line',\r\n                data: [[0, 1.11], [5, 4.51]],\r\n                marker: {\r\n                    enabled: false\r\n                },\r\n                states: {\r\n                    hover: {\r\n                        lineWidth: 0\r\n                    }\r\n                },\r\n                enableMouseTracking: false\r\n            }, {\r\n                type: 'scatter',\r\n                name: 'Observations',\r\n                data: [1, 1.5, 2.8, 3.5, 3.9, 4.2],\r\n                marker: {\r\n                    radius: 4\r\n                }\r\n            }]\r\n        }\r\n        return (\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class Histogram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { mainText, subText } = this.props;\r\n        const options = {\r\n            chart: {\r\n                type: 'column'\r\n            },\r\n            title: {\r\n                text: mainText\r\n            },\r\n            subtitle: {\r\n                text: subText\r\n            },\r\n            xAxis: {\r\n                categories: [\r\n                2.5,\r\n                17.5,\r\n                32.5,\r\n                47.5,\r\n                62.5,\r\n                77.5,\r\n                107.5,\r\n                122.5,\r\n                137.5,\r\n                152.5,\r\n                167.5,\r\n                182.5,\r\n                197.5\r\n                ],\r\n                crosshair: true\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: 'Percent'\r\n                }\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<span style=\"font-size:12px\">Price: {point.key}</span><table>',\r\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">Percent: </td>' +\r\n                '<td style=\"padding:0\">{point.y:.1f} %<b></b></td></tr>',\r\n                footerFormat: '</table>',\r\n                shared: true,\r\n                useHTML: true\r\n            },\r\n            plotOptions: {\r\n                column: {\r\n                    pointPadding: 0,\r\n                    borderWidth: 1,\r\n                    groupPadding: 0,\r\n                    shadow: false\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'HUB Node Prices',\r\n                data: [2, 7, 17, 19, 13, 9, 7, 6, 5, 4, 3, 2, 1]\r\n\r\n            }]\r\n        }\r\n        return (\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction getPointCategoryName(point, dimension) {\r\n    var series = point.series,\r\n        isY = dimension === 'y',\r\n        axis = series[isY ? 'yAxis' : 'xAxis'];\r\n    return axis.categories[point[isY ? 'y' : 'x']];\r\n}\r\n\r\nfunction makeCells() {\r\n    let cells = [];\r\n    for (let i = 0; i < 24; ++i) {\r\n        for (let j = 0; j < 12; ++j) {\r\n            cells.push([j, i, Math.floor(Math.random() * 10)])\r\n        }\r\n    }\r\n    return cells;\r\n}\r\n\r\nexport class HeatMap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const options = {\r\n            chart: {\r\n                type: 'heatmap',\r\n                marginTop: 40,\r\n                marginBottom: 80,\r\n                plotBorderWidth: 1,\r\n                height: 87.5 + '%'\r\n            },\r\n\r\n\r\n            title: {\r\n                text: 'Maximum Absolute Percent Errors'\r\n            },\r\n\r\n            xAxis: {\r\n                categories: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n                title: {\r\n                    text: 'Months'\r\n                }\r\n            },\r\n\r\n            yAxis: {\r\n                categories: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\r\n                title: {\r\n                    text: 'Hour'\r\n                },\r\n            },\r\n\r\n            colorAxis: {\r\n                min: 0,\r\n                minColor: '#E0FFFF',\r\n                maxColor: Highcharts.getOptions().colors[5]\r\n            },\r\n\r\n            legend: {\r\n                align: 'right',\r\n                layout: 'vertical',\r\n                margin: 0,\r\n                verticalAlign: 'top',\r\n                y: 25,\r\n                symbolHeight: 328.5\r\n           },\r\n\r\n            tooltip: {\r\n                formatter: function () {\r\n                    return '<b>' + this.point.value + '</b>% at <b>' + getPointCategoryName(this.point, 'y') + '</b> on <b>' + getPointCategoryName(this.point, 'x') + '</b>';\r\n                }\r\n            },\r\n\r\n            series: [{\r\n                name: 'Month',\r\n                borderWidth: 1,\r\n                data: makeCells(),\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    color: '#000000'\r\n                }\r\n            }],\r\n\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 500\r\n                    },\r\n                    chartOptions: {\r\n                        yAxis: {\r\n                            labels: {\r\n                                formatter: function () {\r\n                                    return this.value.charAt(0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n        return (\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport class LineChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const options = {\r\n            chart: {\r\n                type: 'spline'\r\n            },\r\n            title: {\r\n                text: 'System Demand'\r\n            },\r\n            subtitle: {\r\n                text: 'Forecasted & Actual'\r\n            },\r\n            xAxis: {\r\n                type: 'datetime',\r\n                dateTimeLabelFormats: { // don't display the dummy year\r\n                    hour: '%H:%M',\r\n                    year: '%b'\r\n                },\r\n                title: {\r\n                    text: 'Hour'\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: 'MW'\r\n                },\r\n                min: 0\r\n            },\r\n            tooltip: {\r\n                headerFormat: '<b>{series.name}</b><br>',\r\n                pointFormat: '{point.x:%H:%M}: {point.y:.2f} MW'\r\n            },\r\n\r\n            plotOptions: {\r\n                series: {\r\n                    marker: {\r\n                        enabled: true,\r\n                        radius: 2.5\r\n                    }\r\n                }\r\n            },\r\n\r\n            colors: ['Crimson', 'DeepSkyBlue'],\r\n            // colors: ['#6CF', '#39F', '#06C', '#036', '#000'],\r\n\r\n            // Define the data points. All series have a dummy year of 1970/71 in order\r\n            // to be compared on the same x axis. Note that in JavaScript, months start\r\n            // at 0 for January, 1 for February etc.\r\n            series: [\r\n                {\r\n                    name: \"Forecasted (MW)\",\r\n                    data: [\r\n                        [Date.UTC(2022, 9, 19, 0, 0), 8250],\r\n                        [Date.UTC(2022, 9, 19, 1, 0), 7777],\r\n                        [Date.UTC(2022, 9, 19, 2, 0), 5677],\r\n                        [Date.UTC(2022, 9, 19, 3, 0), 4077],\r\n                        [Date.UTC(2022, 9, 19, 4, 0), 3600],\r\n                        [Date.UTC(2022, 9, 19, 5, 0), 2200],\r\n                        [Date.UTC(2022, 9, 19, 6, 0), 7450],\r\n                        [Date.UTC(2022, 9, 19, 7, 0), 9870],\r\n                        [Date.UTC(2022, 9, 19, 8, 0), 11897],\r\n                        [Date.UTC(2022, 9, 19, 9, 0), 12789],\r\n                        [Date.UTC(2022, 9, 19, 10, 0), 11567],\r\n                        [Date.UTC(2022, 9, 19, 11, 0), 10456],\r\n                        [Date.UTC(2022, 9, 19, 12, 0), 10897],\r\n                        [Date.UTC(2022, 9, 19, 13, 0), 10453],\r\n                        [Date.UTC(2022, 9, 19, 14, 0), 9853],\r\n                        [Date.UTC(2022, 9, 19, 15, 0), 10234],\r\n                        [Date.UTC(2022, 9, 19, 16, 0), 11456],\r\n                        [Date.UTC(2022, 9, 19, 17, 0), 12678],\r\n                        [Date.UTC(2022, 9, 19, 18, 0), 14357],\r\n                        [Date.UTC(2022, 9, 19, 19, 0), 15340],\r\n                        [Date.UTC(2022, 9, 19, 20, 0), 16790],\r\n                        [Date.UTC(2022, 9, 19, 21, 0), 13335],\r\n                        [Date.UTC(2022, 9, 19, 22, 0), 9340],\r\n                        [Date.UTC(2022, 9, 19, 23, 0), 8950],\r\n                    ]\r\n                }, {\r\n                    name: \"Actual (MW)\",\r\n                    data: [\r\n                        [Date.UTC(2022, 9, 19, 0, 0), 8350],\r\n                        [Date.UTC(2022, 9, 19, 1, 0), 7677],\r\n                        [Date.UTC(2022, 9, 19, 2, 0), 5877],\r\n                        [Date.UTC(2022, 9, 19, 3, 0), 4177],\r\n                        [Date.UTC(2022, 9, 19, 4, 0), 3500],\r\n                        [Date.UTC(2022, 9, 19, 5, 0), 2800],\r\n                        [Date.UTC(2022, 9, 19, 6, 0), 7750],\r\n                        [Date.UTC(2022, 9, 19, 7, 0), 9370],\r\n                        [Date.UTC(2022, 9, 19, 8, 0), 12897],\r\n                        [Date.UTC(2022, 9, 19, 9, 0), 11789],\r\n                        [Date.UTC(2022, 9, 19, 10, 0), 11667],\r\n                        [Date.UTC(2022, 9, 19, 11, 0), 10756],\r\n                        [Date.UTC(2022, 9, 19, 12, 0), 10697],\r\n                        [Date.UTC(2022, 9, 19, 13, 0), 10753],\r\n                        [Date.UTC(2022, 9, 19, 14, 0), 9833],\r\n                        [Date.UTC(2022, 9, 19, 15, 0), 10334],\r\n                        [Date.UTC(2022, 9, 19, 16, 0), 11756],\r\n                        [Date.UTC(2022, 9, 19, 17, 0), 12478],\r\n                        [Date.UTC(2022, 9, 19, 18, 0), 14657],\r\n                        [Date.UTC(2022, 9, 19, 19, 0), 15740],\r\n                        [Date.UTC(2022, 9, 19, 20, 0), 16890],\r\n                        [Date.UTC(2022, 9, 19, 21, 0), 14535],\r\n                        [Date.UTC(2022, 9, 19, 22, 0), 7360],\r\n                        [Date.UTC(2022, 9, 19, 23, 0), 6940],      \r\n                    ]\r\n                }, \r\n            ]\r\n        }\r\n        return (\r\n            <HighchartsReact\r\n                highcharts={Highcharts}\r\n                options={options}\r\n            />\r\n        );\r\n    }\r\n}",{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":2,"column":22,"nodeType":"48","messageId":"49","endLine":2,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":9,"column":5,"nodeType":"53","messageId":"54","endLine":11,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":56,"column":5,"nodeType":"53","messageId":"54","endLine":58,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":144,"column":5,"nodeType":"53","messageId":"54","endLine":146,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":234,"column":5,"nodeType":"53","messageId":"54","endLine":236,"endColumn":6},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'chart' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]