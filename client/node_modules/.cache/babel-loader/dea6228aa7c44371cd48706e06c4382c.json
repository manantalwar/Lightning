{"ast":null,"code":"var _jsxFileName = \"/Users/alanz/school/cs320/lightning/client/src/Graphs.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport Highcharts, { chart } from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst heat = require('highcharts/modules/heatmap');\nheat(Highcharts);\nexport class ScatterPlot extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const options = {\n      chart: {\n        height: '120%'\n      },\n      title: {\n        text: 'Scatter Plot with Regression Line'\n      },\n      xAxis: {\n        min: 0,\n        max: 5\n      },\n      yAxis: {\n        min: 0\n      },\n      series: [{\n        type: 'line',\n        name: 'Regression Line',\n        data: [[0, 1.11], [5, 4.51]],\n        marker: {\n          enabled: false\n        },\n        states: {\n          hover: {\n            lineWidth: 0\n          }\n        },\n        enableMouseTracking: false\n      }, {\n        type: 'scatter',\n        name: 'Observations',\n        data: [1, 1.5, 2.8, 3.5, 3.9, 4.2],\n        marker: {\n          radius: 4\n        }\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n        // border: \"1px solid #ccc\",\n        // padding: \"10px\",\n        // cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport class Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const {\n      mainText,\n      subText\n    } = this.props;\n    const options = {\n      chart: {\n        height: '60%',\n        type: 'column'\n      },\n      title: {\n        text: mainText\n      },\n      subtitle: {\n        text: subText\n      },\n      xAxis: {\n        categories: [2.5, 17.5, 32.5, 47.5, 62.5, 77.5, 107.5, 122.5, 137.5, 152.5, 167.5, 182.5, 197.5],\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: 'Percent'\n        }\n      },\n      tooltip: {\n        headerFormat: '<span style=\"font-size:12px\">Price: {point.key}</span><table>',\n        pointFormat: '<tr><td style=\"color:{series.color};padding:0\">Percent: </td>' + '<td style=\"padding:0\">{point.y:.1f} %<b></b></td></tr>',\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true\n      },\n      plotOptions: {\n        column: {\n          pointPadding: 0,\n          borderWidth: 1,\n          groupPadding: 0,\n          shadow: false\n        }\n      },\n      series: [{\n        name: 'HUB Node Prices',\n        data: [2, 7, 17, 19, 13, 9, 7, 6, 5, 4, 3, 2, 1]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction getPointCategoryName(point, dimension) {\n  var series = point.series,\n    isY = dimension === 'y',\n    axis = series[isY ? 'yAxis' : 'xAxis'];\n  return axis.categories[point[isY ? 'y' : 'x']];\n}\nfunction makeCells() {\n  let cells = [];\n  for (let i = 0; i < 24; ++i) {\n    for (let j = 0; j < 12; ++j) {\n      cells.push([j, i, Math.floor(Math.random() * 10)]);\n    }\n  }\n  return cells;\n}\nexport class HeatMap extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const options = {\n      chart: {\n        type: 'heatmap',\n        marginTop: 40,\n        marginBottom: 80,\n        plotBorderWidth: 1,\n        height: 120 + '%'\n      },\n      title: {\n        text: 'Maximum Absolute Percent Errors'\n      },\n      xAxis: {\n        categories: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        title: {\n          text: 'Months'\n        }\n      },\n      yAxis: {\n        categories: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n        title: {\n          text: 'Hour'\n        }\n      },\n      colorAxis: {\n        min: 0,\n        minColor: '#E0FFFF',\n        maxColor: Highcharts.getOptions().colors[5]\n      },\n      legend: {\n        align: 'right',\n        layout: 'vertical',\n        margin: 0,\n        verticalAlign: 'top',\n        y: 25,\n        symbolHeight: 328.5\n      },\n      tooltip: {\n        formatter: function () {\n          return '<b>' + this.point.value + '</b>% at <b>' + getPointCategoryName(this.point, 'y') + '</b> on <b>' + getPointCategoryName(this.point, 'x') + '</b>';\n        }\n      },\n      series: [{\n        name: 'Month',\n        borderWidth: 1,\n        data: makeCells(),\n        dataLabels: {\n          enabled: true,\n          color: '#000000'\n        }\n      }],\n      responsive: {\n        rules: [{\n          condition: {\n            maxWidth: 500\n          }\n          // chartOptions: {\n          //     yAxis: {\n          //         labels: {\n          //             formatter: function () {\n          //                 return this.value.charAt(0);\n          //             }\n          //         }\n          //     }\n          // }\n        }]\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n        // border: \"1px solid #ccc\",\n        // padding: \"10px\",\n        // cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// export class LineChart extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//         const options = {\n//             chart: {\n//                 type: 'spline'\n//             },\n//             title: {\n//                 text: 'System Demand'\n//             },\n//             subtitle: {\n//                 text: 'Forecasted & Actual'\n//             },\n//             xAxis: {\n//                 type: 'datetime',\n//                 dateTimeLabelFormats: { // don't display the dummy year\n//                     hour: '%H:%M',\n//                     year: '%b'\n//                 },\n//                 title: {\n//                     text: 'Hour'\n//                 }\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: 'MW'\n//                 },\n//                 min: 0\n//             },\n//             tooltip: {\n//                 headerFormat: '<b>{series.name}</b><br>',\n//                 pointFormat: '{point.x:%H:%M}: {point.y:.2f} MW'\n//             },\n\n//             plotOptions: {\n//                 series: {\n//                     marker: {\n//                         enabled: true,\n//                         radius: 2.5\n//                     }\n//                 }\n//             },\n\n//             colors: ['Crimson', 'DeepSkyBlue'],\n//             // colors: ['#6CF', '#39F', '#06C', '#036', '#000'],\n\n//             // Define the data points. All series have a dummy year of 1970/71 in order\n//             // to be compared on the same x axis. Note that in JavaScript, months start\n//             // at 0 for January, 1 for February etc.\n//             series: [\n//                 {\n//                     name: \"Forecasted (MW)\",\n//                     data: [\n//                         [Date.UTC(2022, 9, 19, 0, 0), 8250],\n//                         [Date.UTC(2022, 9, 19, 1, 0), 7777],\n//                         [Date.UTC(2022, 9, 19, 2, 0), 5677],\n//                         [Date.UTC(2022, 9, 19, 3, 0), 4077],\n//                         [Date.UTC(2022, 9, 19, 4, 0), 3600],\n//                         [Date.UTC(2022, 9, 19, 5, 0), 2200],\n//                         [Date.UTC(2022, 9, 19, 6, 0), 7450],\n//                         [Date.UTC(2022, 9, 19, 7, 0), 9870],\n//                         [Date.UTC(2022, 9, 19, 8, 0), 11897],\n//                         [Date.UTC(2022, 9, 19, 9, 0), 12789],\n//                         [Date.UTC(2022, 9, 19, 10, 0), 11567],\n//                         [Date.UTC(2022, 9, 19, 11, 0), 10456],\n//                         [Date.UTC(2022, 9, 19, 12, 0), 10897],\n//                         [Date.UTC(2022, 9, 19, 13, 0), 10453],\n//                         [Date.UTC(2022, 9, 19, 14, 0), 9853],\n//                         [Date.UTC(2022, 9, 19, 15, 0), 10234],\n//                         [Date.UTC(2022, 9, 19, 16, 0), 11456],\n//                         [Date.UTC(2022, 9, 19, 17, 0), 12678],\n//                         [Date.UTC(2022, 9, 19, 18, 0), 14357],\n//                         [Date.UTC(2022, 9, 19, 19, 0), 15340],\n//                         [Date.UTC(2022, 9, 19, 20, 0), 16790],\n//                         [Date.UTC(2022, 9, 19, 21, 0), 13335],\n//                         [Date.UTC(2022, 9, 19, 22, 0), 9340],\n//                         [Date.UTC(2022, 9, 19, 23, 0), 8950],\n//                     ]\n//                 }, {\n//                     name: \"Actual (MW)\",\n//                     data: [\n//                         [Date.UTC(2022, 9, 19, 0, 0), 8350],\n//                         [Date.UTC(2022, 9, 19, 1, 0), 7677],\n//                         [Date.UTC(2022, 9, 19, 2, 0), 5877],\n//                         [Date.UTC(2022, 9, 19, 3, 0), 4177],\n//                         [Date.UTC(2022, 9, 19, 4, 0), 3500],\n//                         [Date.UTC(2022, 9, 19, 5, 0), 2800],\n//                         [Date.UTC(2022, 9, 19, 6, 0), 7750],\n//                         [Date.UTC(2022, 9, 19, 7, 0), 9370],\n//                         [Date.UTC(2022, 9, 19, 8, 0), 12897],\n//                         [Date.UTC(2022, 9, 19, 9, 0), 11789],\n//                         [Date.UTC(2022, 9, 19, 10, 0), 11667],\n//                         [Date.UTC(2022, 9, 19, 11, 0), 10756],\n//                         [Date.UTC(2022, 9, 19, 12, 0), 10697],\n//                         [Date.UTC(2022, 9, 19, 13, 0), 10753],\n//                         [Date.UTC(2022, 9, 19, 14, 0), 9833],\n//                         [Date.UTC(2022, 9, 19, 15, 0), 10334],\n//                         [Date.UTC(2022, 9, 19, 16, 0), 11756],\n//                         [Date.UTC(2022, 9, 19, 17, 0), 12478],\n//                         [Date.UTC(2022, 9, 19, 18, 0), 14657],\n//                         [Date.UTC(2022, 9, 19, 19, 0), 15740],\n//                         [Date.UTC(2022, 9, 19, 20, 0), 16890],\n//                         [Date.UTC(2022, 9, 19, 21, 0), 14535],\n//                         [Date.UTC(2022, 9, 19, 22, 0), 7360],\n//                         [Date.UTC(2022, 9, 19, 23, 0), 6940],      \n//                     ]\n//                 }, \n//             ]\n//         }\n\n//         return (\n//             <HighchartsReact\n//                 containerProps={{ style: { height: \"100%\"}}}\n//                 highcharts={Highcharts}\n//                 options={options}\n//             />\n\n//         );\n//     }\n// }\n\nexport default function LineChart() {\n  _s();\n  const options = {\n    chart: {\n      height: '110%',\n      type: 'spline'\n    },\n    title: {\n      text: 'System Demand'\n    },\n    subtitle: {\n      text: 'Forecasted & Actual'\n    },\n    xAxis: {\n      type: 'datetime',\n      dateTimeLabelFormats: {\n        // don't display the dummy year\n        hour: '%H:%M',\n        year: '%b'\n      },\n      title: {\n        text: 'Hour'\n      }\n    },\n    yAxis: {\n      title: {\n        text: 'MW'\n      },\n      min: 0\n    },\n    tooltip: {\n      headerFormat: '<b>{series.name}</b><br>',\n      pointFormat: '{point.x:%H:%M}: {point.y:.2f} MW'\n    },\n    plotOptions: {\n      series: {\n        marker: {\n          enabled: true,\n          radius: 2.5\n        }\n      }\n    },\n    colors: ['Crimson', 'DeepSkyBlue'],\n    // colors: ['#6CF', '#39F', '#06C', '#036', '#000'],\n\n    // Define the data points. All series have a dummy year of 1970/71 in order\n    // to be compared on the same x axis. Note that in JavaScript, months start\n    // at 0 for January, 1 for February etc.\n    series: [{\n      name: \"Forecasted (MW)\",\n      data: [[Date.UTC(2022, 9, 19, 0, 0), 8250], [Date.UTC(2022, 9, 19, 1, 0), 7777], [Date.UTC(2022, 9, 19, 2, 0), 5677], [Date.UTC(2022, 9, 19, 3, 0), 4077], [Date.UTC(2022, 9, 19, 4, 0), 3600], [Date.UTC(2022, 9, 19, 5, 0), 2200], [Date.UTC(2022, 9, 19, 6, 0), 7450], [Date.UTC(2022, 9, 19, 7, 0), 9870], [Date.UTC(2022, 9, 19, 8, 0), 11897], [Date.UTC(2022, 9, 19, 9, 0), 12789], [Date.UTC(2022, 9, 19, 10, 0), 11567], [Date.UTC(2022, 9, 19, 11, 0), 10456], [Date.UTC(2022, 9, 19, 12, 0), 10897], [Date.UTC(2022, 9, 19, 13, 0), 10453], [Date.UTC(2022, 9, 19, 14, 0), 9853], [Date.UTC(2022, 9, 19, 15, 0), 10234], [Date.UTC(2022, 9, 19, 16, 0), 11456], [Date.UTC(2022, 9, 19, 17, 0), 12678], [Date.UTC(2022, 9, 19, 18, 0), 14357], [Date.UTC(2022, 9, 19, 19, 0), 15340], [Date.UTC(2022, 9, 19, 20, 0), 16790], [Date.UTC(2022, 9, 19, 21, 0), 13335], [Date.UTC(2022, 9, 19, 22, 0), 9340], [Date.UTC(2022, 9, 19, 23, 0), 8950]]\n    }, {\n      name: \"Actual (MW)\",\n      data: [[Date.UTC(2022, 9, 19, 0, 0), 8350], [Date.UTC(2022, 9, 19, 1, 0), 7677], [Date.UTC(2022, 9, 19, 2, 0), 5877], [Date.UTC(2022, 9, 19, 3, 0), 4177], [Date.UTC(2022, 9, 19, 4, 0), 3500], [Date.UTC(2022, 9, 19, 5, 0), 2800], [Date.UTC(2022, 9, 19, 6, 0), 7750], [Date.UTC(2022, 9, 19, 7, 0), 9370], [Date.UTC(2022, 9, 19, 8, 0), 12897], [Date.UTC(2022, 9, 19, 9, 0), 11789], [Date.UTC(2022, 9, 19, 10, 0), 11667], [Date.UTC(2022, 9, 19, 11, 0), 10756], [Date.UTC(2022, 9, 19, 12, 0), 10697], [Date.UTC(2022, 9, 19, 13, 0), 10753], [Date.UTC(2022, 9, 19, 14, 0), 9833], [Date.UTC(2022, 9, 19, 15, 0), 10334], [Date.UTC(2022, 9, 19, 16, 0), 11756], [Date.UTC(2022, 9, 19, 17, 0), 12478], [Date.UTC(2022, 9, 19, 18, 0), 14657], [Date.UTC(2022, 9, 19, 19, 0), 15740], [Date.UTC(2022, 9, 19, 20, 0), 16890], [Date.UTC(2022, 9, 19, 21, 0), 14535], [Date.UTC(2022, 9, 19, 22, 0), 7360], [Date.UTC(2022, 9, 19, 23, 0), 6940]]\n    }]\n  };\n  const chartComponent = useRef(null);\n  function clickHandler(e) {\n    e.target.style.width = \"500px\";\n    e.target.style.height = \"500px\";\n    chartComponent.current.chart.reflow();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n      // border: \"1px solid #ccc\",\n      // padding: \"10px\",\n      // cursor: \"pointer\"\n    },\n\n    onClick: clickHandler,\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      ref: chartComponent,\n      highcharts: Highcharts,\n      options: options,\n      allowChartUpdate: true,\n      containerProps: {\n        style: {\n          height: \"100%\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 13\n  }, this);\n}\n_s(LineChart, \"ElKTL2M8wsEdgtKEqVDX0ktTdso=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useRef","Highcharts","chart","HighchartsReact","heat","require","ScatterPlot","Component","constructor","props","render","options","height","title","text","xAxis","min","max","yAxis","series","type","name","data","marker","enabled","states","hover","lineWidth","enableMouseTracking","radius","width","Histogram","mainText","subText","subtitle","categories","crosshair","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","groupPadding","shadow","getPointCategoryName","point","dimension","isY","axis","makeCells","cells","i","j","push","Math","floor","random","HeatMap","marginTop","marginBottom","plotBorderWidth","colorAxis","minColor","maxColor","getOptions","colors","legend","align","layout","margin","verticalAlign","y","symbolHeight","formatter","value","dataLabels","color","responsive","rules","condition","maxWidth","LineChart","dateTimeLabelFormats","hour","year","Date","UTC","chartComponent","clickHandler","e","target","style","current","reflow"],"sources":["/Users/alanz/school/cs320/lightning/client/src/Graphs.js"],"sourcesContent":["import React, {useRef} from 'react';\nimport Highcharts, { chart } from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nconst heat = require('highcharts/modules/heatmap');\nheat(Highcharts);\n\nexport class ScatterPlot extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const options = {\n            chart: {\n                height: '120%'\n            },\n            title: {\n                text: 'Scatter Plot with Regression Line'\n            },\n            xAxis: {\n                min: 0,\n                max: 5\n            },\n            yAxis: {\n                min: 0\n            },\n            series: [{\n                type: 'line',\n                name: 'Regression Line',\n                data: [[0, 1.11], [5, 4.51]],\n                marker: {\n                    enabled: false\n                },\n                states: {\n                    hover: {\n                        lineWidth: 0\n                    }\n                },\n                enableMouseTracking: false\n            }, {\n                type: 'scatter',\n                name: 'Observations',\n                data: [1, 1.5, 2.8, 3.5, 3.9, 4.2],\n                marker: {\n                    radius: 4\n                }\n            }]\n        }\n        return (\n            <div\n            style={{\n                width: \"100%\",\n                height: \"100%\"\n                // border: \"1px solid #ccc\",\n                // padding: \"10px\",\n                // cursor: \"pointer\"\n            }}\n            >\n            <HighchartsReact\n\n                highcharts={Highcharts}\n                options={options}\n            />\n            </div>\n        );\n    }\n}\n\nexport class Histogram extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const { mainText, subText } = this.props;\n        const options = {\n            chart: {\n                height: '60%',\n                type: 'column'\n            },\n            title: {\n                text: mainText\n            },\n            subtitle: {\n                text: subText\n            },\n            xAxis: {\n                categories: [\n                2.5,\n                17.5,\n                32.5,\n                47.5,\n                62.5,\n                77.5,\n                107.5,\n                122.5,\n                137.5,\n                152.5,\n                167.5,\n                182.5,\n                197.5\n                ],\n                crosshair: true\n            },\n            yAxis: {\n                min: 0,\n                title: {\n                    text: 'Percent'\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size:12px\">Price: {point.key}</span><table>',\n                pointFormat: '<tr><td style=\"color:{series.color};padding:0\">Percent: </td>' +\n                '<td style=\"padding:0\">{point.y:.1f} %<b></b></td></tr>',\n                footerFormat: '</table>',\n                shared: true,\n                useHTML: true\n            },\n            plotOptions: {\n                column: {\n                    pointPadding: 0,\n                    borderWidth: 1,\n                    groupPadding: 0,\n                    shadow: false\n                }\n            },\n            series: [{\n                name: 'HUB Node Prices',\n                data: [2, 7, 17, 19, 13, 9, 7, 6, 5, 4, 3, 2, 1]\n\n            }]\n        }\n        return (\n            <HighchartsReact\n                highcharts={Highcharts}\n                options={options}\n            />\n        );\n    }\n}\n\nfunction getPointCategoryName(point, dimension) {\n    var series = point.series,\n        isY = dimension === 'y',\n        axis = series[isY ? 'yAxis' : 'xAxis'];\n    return axis.categories[point[isY ? 'y' : 'x']];\n}\n\nfunction makeCells() {\n    let cells = [];\n    for (let i = 0; i < 24; ++i) {\n        for (let j = 0; j < 12; ++j) {\n            cells.push([j, i, Math.floor(Math.random() * 10)])\n        }\n    }\n    return cells;\n}\n\nexport class HeatMap extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const options = {\n            chart: {\n                type: 'heatmap',\n                marginTop: 40,\n                marginBottom: 80,\n                plotBorderWidth: 1,\n                height: 120 + '%'\n            },\n\n\n            title: {\n                text: 'Maximum Absolute Percent Errors'\n            },\n\n            xAxis: {\n                categories: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n                title: {\n                    text: 'Months'\n                }\n            },\n\n            yAxis: {\n                categories: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n                title: {\n                    text: 'Hour'\n                },\n            },\n\n            colorAxis: {\n                min: 0,\n                minColor: '#E0FFFF',\n                maxColor: Highcharts.getOptions().colors[5]\n            },\n\n            legend: {\n                align: 'right',\n                layout: 'vertical',\n                margin: 0,\n                verticalAlign: 'top',\n                y: 25,\n                symbolHeight: 328.5\n           },\n\n            tooltip: {\n                formatter: function () {\n                    return '<b>' + this.point.value + '</b>% at <b>' + getPointCategoryName(this.point, 'y') + '</b> on <b>' + getPointCategoryName(this.point, 'x') + '</b>';\n                }\n            },\n\n            series: [{\n                name: 'Month',\n                borderWidth: 1,\n                data: makeCells(),\n                dataLabels: {\n                    enabled: true,\n                    color: '#000000'\n                }\n            }],\n\n            responsive: {\n                rules: [{\n                    condition: {\n                        maxWidth: 500\n                    },\n                    // chartOptions: {\n                    //     yAxis: {\n                    //         labels: {\n                    //             formatter: function () {\n                    //                 return this.value.charAt(0);\n                    //             }\n                    //         }\n                    //     }\n                    // }\n                }]\n            }\n        }\n        return (\n            <div\n            style={{\n                width: \"100%\",\n                height: \"100%\"\n                // border: \"1px solid #ccc\",\n                // padding: \"10px\",\n                // cursor: \"pointer\"\n            }}\n            >\n            <HighchartsReact\n\n                highcharts={Highcharts}\n                options={options}\n            />\n            </div>\n\n        );\n    }\n}\n\n\n// export class LineChart extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//         const options = {\n//             chart: {\n//                 type: 'spline'\n//             },\n//             title: {\n//                 text: 'System Demand'\n//             },\n//             subtitle: {\n//                 text: 'Forecasted & Actual'\n//             },\n//             xAxis: {\n//                 type: 'datetime',\n//                 dateTimeLabelFormats: { // don't display the dummy year\n//                     hour: '%H:%M',\n//                     year: '%b'\n//                 },\n//                 title: {\n//                     text: 'Hour'\n//                 }\n//             },\n//             yAxis: {\n//                 title: {\n//                     text: 'MW'\n//                 },\n//                 min: 0\n//             },\n//             tooltip: {\n//                 headerFormat: '<b>{series.name}</b><br>',\n//                 pointFormat: '{point.x:%H:%M}: {point.y:.2f} MW'\n//             },\n\n//             plotOptions: {\n//                 series: {\n//                     marker: {\n//                         enabled: true,\n//                         radius: 2.5\n//                     }\n//                 }\n//             },\n\n//             colors: ['Crimson', 'DeepSkyBlue'],\n//             // colors: ['#6CF', '#39F', '#06C', '#036', '#000'],\n\n//             // Define the data points. All series have a dummy year of 1970/71 in order\n//             // to be compared on the same x axis. Note that in JavaScript, months start\n//             // at 0 for January, 1 for February etc.\n//             series: [\n//                 {\n//                     name: \"Forecasted (MW)\",\n//                     data: [\n//                         [Date.UTC(2022, 9, 19, 0, 0), 8250],\n//                         [Date.UTC(2022, 9, 19, 1, 0), 7777],\n//                         [Date.UTC(2022, 9, 19, 2, 0), 5677],\n//                         [Date.UTC(2022, 9, 19, 3, 0), 4077],\n//                         [Date.UTC(2022, 9, 19, 4, 0), 3600],\n//                         [Date.UTC(2022, 9, 19, 5, 0), 2200],\n//                         [Date.UTC(2022, 9, 19, 6, 0), 7450],\n//                         [Date.UTC(2022, 9, 19, 7, 0), 9870],\n//                         [Date.UTC(2022, 9, 19, 8, 0), 11897],\n//                         [Date.UTC(2022, 9, 19, 9, 0), 12789],\n//                         [Date.UTC(2022, 9, 19, 10, 0), 11567],\n//                         [Date.UTC(2022, 9, 19, 11, 0), 10456],\n//                         [Date.UTC(2022, 9, 19, 12, 0), 10897],\n//                         [Date.UTC(2022, 9, 19, 13, 0), 10453],\n//                         [Date.UTC(2022, 9, 19, 14, 0), 9853],\n//                         [Date.UTC(2022, 9, 19, 15, 0), 10234],\n//                         [Date.UTC(2022, 9, 19, 16, 0), 11456],\n//                         [Date.UTC(2022, 9, 19, 17, 0), 12678],\n//                         [Date.UTC(2022, 9, 19, 18, 0), 14357],\n//                         [Date.UTC(2022, 9, 19, 19, 0), 15340],\n//                         [Date.UTC(2022, 9, 19, 20, 0), 16790],\n//                         [Date.UTC(2022, 9, 19, 21, 0), 13335],\n//                         [Date.UTC(2022, 9, 19, 22, 0), 9340],\n//                         [Date.UTC(2022, 9, 19, 23, 0), 8950],\n//                     ]\n//                 }, {\n//                     name: \"Actual (MW)\",\n//                     data: [\n//                         [Date.UTC(2022, 9, 19, 0, 0), 8350],\n//                         [Date.UTC(2022, 9, 19, 1, 0), 7677],\n//                         [Date.UTC(2022, 9, 19, 2, 0), 5877],\n//                         [Date.UTC(2022, 9, 19, 3, 0), 4177],\n//                         [Date.UTC(2022, 9, 19, 4, 0), 3500],\n//                         [Date.UTC(2022, 9, 19, 5, 0), 2800],\n//                         [Date.UTC(2022, 9, 19, 6, 0), 7750],\n//                         [Date.UTC(2022, 9, 19, 7, 0), 9370],\n//                         [Date.UTC(2022, 9, 19, 8, 0), 12897],\n//                         [Date.UTC(2022, 9, 19, 9, 0), 11789],\n//                         [Date.UTC(2022, 9, 19, 10, 0), 11667],\n//                         [Date.UTC(2022, 9, 19, 11, 0), 10756],\n//                         [Date.UTC(2022, 9, 19, 12, 0), 10697],\n//                         [Date.UTC(2022, 9, 19, 13, 0), 10753],\n//                         [Date.UTC(2022, 9, 19, 14, 0), 9833],\n//                         [Date.UTC(2022, 9, 19, 15, 0), 10334],\n//                         [Date.UTC(2022, 9, 19, 16, 0), 11756],\n//                         [Date.UTC(2022, 9, 19, 17, 0), 12478],\n//                         [Date.UTC(2022, 9, 19, 18, 0), 14657],\n//                         [Date.UTC(2022, 9, 19, 19, 0), 15740],\n//                         [Date.UTC(2022, 9, 19, 20, 0), 16890],\n//                         [Date.UTC(2022, 9, 19, 21, 0), 14535],\n//                         [Date.UTC(2022, 9, 19, 22, 0), 7360],\n//                         [Date.UTC(2022, 9, 19, 23, 0), 6940],      \n//                     ]\n//                 }, \n//             ]\n//         }\n\n\n//         return (\n//             <HighchartsReact\n//                 containerProps={{ style: { height: \"100%\"}}}\n//                 highcharts={Highcharts}\n//                 options={options}\n//             />\n\n//         );\n//     }\n// }\n\nexport default function LineChart() {\n        const options = {\n            chart: {\n                height: '110%',\n                type: 'spline'\n            },\n            title: {\n                text: 'System Demand'\n            },\n            subtitle: {\n                text: 'Forecasted & Actual'\n            },\n            xAxis: {\n                type: 'datetime',\n                dateTimeLabelFormats: { // don't display the dummy year\n                    hour: '%H:%M',\n                    year: '%b'\n                },\n                title: {\n                    text: 'Hour'\n                }\n            },\n            yAxis: {\n                title: {\n                    text: 'MW'\n                },\n                min: 0\n            },\n            tooltip: {\n                headerFormat: '<b>{series.name}</b><br>',\n                pointFormat: '{point.x:%H:%M}: {point.y:.2f} MW'\n            },\n\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true,\n                        radius: 2.5\n                    }\n                }\n            },\n\n            colors: ['Crimson', 'DeepSkyBlue'],\n            // colors: ['#6CF', '#39F', '#06C', '#036', '#000'],\n\n            // Define the data points. All series have a dummy year of 1970/71 in order\n            // to be compared on the same x axis. Note that in JavaScript, months start\n            // at 0 for January, 1 for February etc.\n            series: [\n                {\n                    name: \"Forecasted (MW)\",\n                    data: [\n                        [Date.UTC(2022, 9, 19, 0, 0), 8250],\n                        [Date.UTC(2022, 9, 19, 1, 0), 7777],\n                        [Date.UTC(2022, 9, 19, 2, 0), 5677],\n                        [Date.UTC(2022, 9, 19, 3, 0), 4077],\n                        [Date.UTC(2022, 9, 19, 4, 0), 3600],\n                        [Date.UTC(2022, 9, 19, 5, 0), 2200],\n                        [Date.UTC(2022, 9, 19, 6, 0), 7450],\n                        [Date.UTC(2022, 9, 19, 7, 0), 9870],\n                        [Date.UTC(2022, 9, 19, 8, 0), 11897],\n                        [Date.UTC(2022, 9, 19, 9, 0), 12789],\n                        [Date.UTC(2022, 9, 19, 10, 0), 11567],\n                        [Date.UTC(2022, 9, 19, 11, 0), 10456],\n                        [Date.UTC(2022, 9, 19, 12, 0), 10897],\n                        [Date.UTC(2022, 9, 19, 13, 0), 10453],\n                        [Date.UTC(2022, 9, 19, 14, 0), 9853],\n                        [Date.UTC(2022, 9, 19, 15, 0), 10234],\n                        [Date.UTC(2022, 9, 19, 16, 0), 11456],\n                        [Date.UTC(2022, 9, 19, 17, 0), 12678],\n                        [Date.UTC(2022, 9, 19, 18, 0), 14357],\n                        [Date.UTC(2022, 9, 19, 19, 0), 15340],\n                        [Date.UTC(2022, 9, 19, 20, 0), 16790],\n                        [Date.UTC(2022, 9, 19, 21, 0), 13335],\n                        [Date.UTC(2022, 9, 19, 22, 0), 9340],\n                        [Date.UTC(2022, 9, 19, 23, 0), 8950],\n                    ]\n                }, {\n                    name: \"Actual (MW)\",\n                    data: [\n                        [Date.UTC(2022, 9, 19, 0, 0), 8350],\n                        [Date.UTC(2022, 9, 19, 1, 0), 7677],\n                        [Date.UTC(2022, 9, 19, 2, 0), 5877],\n                        [Date.UTC(2022, 9, 19, 3, 0), 4177],\n                        [Date.UTC(2022, 9, 19, 4, 0), 3500],\n                        [Date.UTC(2022, 9, 19, 5, 0), 2800],\n                        [Date.UTC(2022, 9, 19, 6, 0), 7750],\n                        [Date.UTC(2022, 9, 19, 7, 0), 9370],\n                        [Date.UTC(2022, 9, 19, 8, 0), 12897],\n                        [Date.UTC(2022, 9, 19, 9, 0), 11789],\n                        [Date.UTC(2022, 9, 19, 10, 0), 11667],\n                        [Date.UTC(2022, 9, 19, 11, 0), 10756],\n                        [Date.UTC(2022, 9, 19, 12, 0), 10697],\n                        [Date.UTC(2022, 9, 19, 13, 0), 10753],\n                        [Date.UTC(2022, 9, 19, 14, 0), 9833],\n                        [Date.UTC(2022, 9, 19, 15, 0), 10334],\n                        [Date.UTC(2022, 9, 19, 16, 0), 11756],\n                        [Date.UTC(2022, 9, 19, 17, 0), 12478],\n                        [Date.UTC(2022, 9, 19, 18, 0), 14657],\n                        [Date.UTC(2022, 9, 19, 19, 0), 15740],\n                        [Date.UTC(2022, 9, 19, 20, 0), 16890],\n                        [Date.UTC(2022, 9, 19, 21, 0), 14535],\n                        [Date.UTC(2022, 9, 19, 22, 0), 7360],\n                        [Date.UTC(2022, 9, 19, 23, 0), 6940],      \n                    ]\n                }, \n            ]\n        }\n\n        const chartComponent = useRef(null);\n\n  function clickHandler(e) {\n    e.target.style.width = \"500px\";\n    e.target.style.height = \"500px\";\n\n    chartComponent.current.chart.reflow();\n  }\n\n\n\n        return (\n            <div\n\n                style={{\n                    width: \"100%\",\n                    height: \"100%\"\n                    // border: \"1px solid #ccc\",\n                    // padding: \"10px\",\n                    // cursor: \"pointer\"\n                }}\n                onClick={clickHandler}\n    >\n            <HighchartsReact\n            ref={chartComponent}\n            highcharts={Highcharts}\n            options={options}\n            allowChartUpdate={true}\n            containerProps={{ style: { height: \"100%\" } }}\n            />\n            </div>\n        );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}