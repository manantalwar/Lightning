{"ast":null,"code":"/*\n Highmaps JS v10.2.1 (2022-08-29)\n\n (c) 2009-2021 Torstein Honsi\n\n License: www.highcharts.com/license\n*/\n(function (b) {\n  \"object\" === typeof module && module.exports ? (b[\"default\"] = b, module.exports = b) : \"function\" === typeof define && define.amd ? define(\"highcharts/modules/heatmap\", [\"highcharts\"], function (q) {\n    b(q);\n    b.Highcharts = q;\n    return b;\n  }) : b(\"undefined\" !== typeof Highcharts ? Highcharts : void 0);\n})(function (b) {\n  function q(b, h, G, p) {\n    b.hasOwnProperty(h) || (b[h] = p.apply(null, G), \"function\" === typeof CustomEvent && window.dispatchEvent(new CustomEvent(\"HighchartsModuleLoaded\", {\n      detail: {\n        path: h,\n        module: b[h]\n      }\n    })));\n  }\n  b = b ? b._modules : {};\n  q(b, \"Core/Axis/Color/ColorAxisComposition.js\", [b[\"Core/Color/Color.js\"], b[\"Core/Utilities.js\"]], function (b, h) {\n    var u = b.parse,\n      p = h.addEvent,\n      z = h.extend,\n      m = h.merge,\n      w = h.pick,\n      B = h.splat,\n      n;\n    (function (e) {\n      function b() {\n        var a = this,\n          c = this.options;\n        this.colorAxis = [];\n        c.colorAxis && (c.colorAxis = B(c.colorAxis), c.colorAxis.forEach(function (c, d) {\n          c.index = d;\n          new k(a, c);\n        }));\n      }\n      function h(a) {\n        var c = this,\n          d = function (d) {\n            d = a.allItems.indexOf(d);\n            -1 !== d && (c.destroyItem(a.allItems[d]), a.allItems.splice(d, 1));\n          },\n          f = [],\n          C,\n          k;\n        (this.chart.colorAxis || []).forEach(function (a) {\n          (C = a.options) && C.showInLegend && (C.dataClasses && C.visible ? f = f.concat(a.getDataClassLegendSymbols()) : C.visible && f.push(a), a.series.forEach(function (a) {\n            if (!a.options.showInLegend || C.dataClasses) \"point\" === a.options.legendType ? a.points.forEach(function (a) {\n              d(a);\n            }) : d(a);\n          }));\n        });\n        for (k = f.length; k--;) a.allItems.unshift(f[k]);\n      }\n      function n(a) {\n        a.visible && a.item.legendColor && a.item.legendSymbol.attr({\n          fill: a.item.legendColor\n        });\n      }\n      function E() {\n        var a = this.chart.colorAxis;\n        a && a.forEach(function (a, c, d) {\n          a.update({}, d);\n        });\n      }\n      function v() {\n        (this.chart.colorAxis && this.chart.colorAxis.length || this.colorAttribs) && this.translateColors();\n      }\n      function t() {\n        var a = this.axisTypes;\n        a ? -1 === a.indexOf(\"colorAxis\") && a.push(\"colorAxis\") : this.axisTypes = [\"colorAxis\"];\n      }\n      function y(a) {\n        var c = this,\n          d = a ? \"show\" : \"hide\";\n        c.visible = c.options.visible = !!a;\n        [\"graphic\", \"dataLabel\"].forEach(function (a) {\n          if (c[a]) c[a][d]();\n        });\n        this.series.buildKDTree();\n      }\n      function g() {\n        var a = this,\n          c = this.options.nullColor,\n          d = this.colorAxis,\n          f = this.colorKey;\n        (this.data.length ? this.data : this.points).forEach(function (k) {\n          var l = k.getNestedProperty(f);\n          (l = k.options.color || (k.isNull || null === k.value ? c : d && \"undefined\" !== typeof l ? d.toColor(l, k) : k.color || a.color)) && k.color !== l && (k.color = l, \"point\" === a.options.legendType && k.legendItem && a.chart.legend.colorizeItem(k, k.visible));\n        });\n      }\n      function f(a) {\n        var c = a.prototype.createAxis;\n        a.prototype.createAxis = function (a, d) {\n          if (\"colorAxis\" !== a) return c.apply(this, arguments);\n          var f = new k(this, m(d.axis, {\n            index: this[a].length,\n            isX: !1\n          }));\n          this.isDirtyLegend = !0;\n          this.axes.forEach(function (a) {\n            a.series = [];\n          });\n          this.series.forEach(function (a) {\n            a.bindAxes();\n            a.isDirtyData = !0;\n          });\n          w(d.redraw, !0) && this.redraw(d.animation);\n          return f;\n        };\n      }\n      function d() {\n        this.elem.attr(\"fill\", u(this.start).tweenTo(u(this.end), this.pos), void 0, !0);\n      }\n      function a() {\n        this.elem.attr(\"stroke\", u(this.start).tweenTo(u(this.end), this.pos), void 0, !0);\n      }\n      var c = [],\n        k;\n      e.compose = function (e, l, x, A, r) {\n        k || (k = e);\n        -1 === c.indexOf(l) && (c.push(l), e = l.prototype, e.collectionsWithUpdate.push(\"colorAxis\"), e.collectionsWithInit.colorAxis = [e.addColorAxis], p(l, \"afterGetAxes\", b), f(l));\n        -1 === c.indexOf(x) && (c.push(x), l = x.prototype, l.fillSetter = d, l.strokeSetter = a);\n        -1 === c.indexOf(A) && (c.push(A), p(A, \"afterGetAllItems\", h), p(A, \"afterColorizeItem\", n), p(A, \"afterUpdate\", E));\n        -1 === c.indexOf(r) && (c.push(r), z(r.prototype, {\n          optionalAxis: \"colorAxis\",\n          translateColors: g\n        }), z(r.prototype.pointClass.prototype, {\n          setVisible: y\n        }), p(r, \"afterTranslate\", v), p(r, \"bindAxes\", t));\n      };\n      e.pointSetVisible = y;\n    })(n || (n = {}));\n    return n;\n  });\n  q(b, \"Core/Axis/Color/ColorAxisDefaults.js\", [], function () {\n    return {\n      lineWidth: 0,\n      minPadding: 0,\n      maxPadding: 0,\n      gridLineWidth: 1,\n      tickPixelInterval: 72,\n      startOnTick: !0,\n      endOnTick: !0,\n      offset: 0,\n      marker: {\n        animation: {\n          duration: 50\n        },\n        width: .01,\n        color: \"#999999\"\n      },\n      labels: {\n        overflow: \"justify\",\n        rotation: 0\n      },\n      minColor: \"#e6ebf5\",\n      maxColor: \"#003399\",\n      tickLength: 5,\n      showInLegend: !0\n    };\n  });\n  q(b, \"Core/Axis/Color/ColorAxis.js\", [b[\"Core/Axis/Axis.js\"], b[\"Core/Color/Color.js\"], b[\"Core/Axis/Color/ColorAxisComposition.js\"], b[\"Core/Axis/Color/ColorAxisDefaults.js\"], b[\"Core/Globals.js\"], b[\"Core/Legend/LegendSymbol.js\"], b[\"Core/Series/SeriesRegistry.js\"], b[\"Core/Utilities.js\"]], function (b, h, q, p, z, m, w, B) {\n    var n = this && this.__extends || function () {\n        var e = function (g, f) {\n          e = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (d, a) {\n            d.__proto__ = a;\n          } || function (d, a) {\n            for (var c in a) a.hasOwnProperty(c) && (d[c] = a[c]);\n          };\n          return e(g, f);\n        };\n        return function (g, f) {\n          function d() {\n            this.constructor = g;\n          }\n          e(g, f);\n          g.prototype = null === f ? Object.create(f) : (d.prototype = f.prototype, new d());\n        };\n      }(),\n      e = h.parse,\n      r = z.noop,\n      u = w.series,\n      D = B.extend,\n      E = B.isNumber,\n      v = B.merge,\n      t = B.pick;\n    h = function (b) {\n      function g(f, d) {\n        var a = b.call(this, f, d) || this;\n        a.beforePadding = !1;\n        a.chart = void 0;\n        a.coll = \"colorAxis\";\n        a.dataClasses = void 0;\n        a.legendItem = void 0;\n        a.legendItems = void 0;\n        a.name = \"\";\n        a.options = void 0;\n        a.stops = void 0;\n        a.visible = !0;\n        a.init(f, d);\n        return a;\n      }\n      n(g, b);\n      g.compose = function (f, d, a, c) {\n        q.compose(g, f, d, a, c);\n      };\n      g.prototype.init = function (f, d) {\n        var a = f.options.legend || {},\n          c = d.layout ? \"vertical\" !== d.layout : \"vertical\" !== a.layout,\n          k = d.visible;\n        a = v(g.defaultColorAxisOptions, d, {\n          showEmpty: !1,\n          title: null,\n          visible: a.enabled && !1 !== k\n        });\n        this.coll = \"colorAxis\";\n        this.side = d.side || c ? 2 : 1;\n        this.reversed = d.reversed || !c;\n        this.opposite = !c;\n        b.prototype.init.call(this, f, a);\n        this.userOptions.visible = k;\n        d.dataClasses && this.initDataClasses(d);\n        this.initStops();\n        this.horiz = c;\n        this.zoomEnabled = !1;\n      };\n      g.prototype.initDataClasses = function (f) {\n        var d = this.chart,\n          a = this.options,\n          c = f.dataClasses.length,\n          k,\n          b = 0,\n          l = d.options.chart.colorCount;\n        this.dataClasses = k = [];\n        this.legendItems = [];\n        (f.dataClasses || []).forEach(function (f, g) {\n          f = v(f);\n          k.push(f);\n          if (d.styledMode || !f.color) \"category\" === a.dataClassColor ? (d.styledMode || (g = d.options.colors, l = g.length, f.color = g[b]), f.colorIndex = b, b++, b === l && (b = 0)) : f.color = e(a.minColor).tweenTo(e(a.maxColor), 2 > c ? .5 : g / (c - 1));\n        });\n      };\n      g.prototype.hasData = function () {\n        return !!(this.tickPositions || []).length;\n      };\n      g.prototype.setTickPositions = function () {\n        if (!this.dataClasses) return b.prototype.setTickPositions.call(this);\n      };\n      g.prototype.initStops = function () {\n        this.stops = this.options.stops || [[0, this.options.minColor], [1, this.options.maxColor]];\n        this.stops.forEach(function (f) {\n          f.color = e(f[1]);\n        });\n      };\n      g.prototype.setOptions = function (f) {\n        b.prototype.setOptions.call(this, f);\n        this.options.crosshair = this.options.marker;\n      };\n      g.prototype.setAxisSize = function () {\n        var f = this.legendSymbol,\n          d = this.chart,\n          a = d.options.legend || {},\n          c,\n          k;\n        f ? (this.left = a = f.attr(\"x\"), this.top = c = f.attr(\"y\"), this.width = k = f.attr(\"width\"), this.height = f = f.attr(\"height\"), this.right = d.chartWidth - a - k, this.bottom = d.chartHeight - c - f, this.len = this.horiz ? k : f, this.pos = this.horiz ? a : c) : this.len = (this.horiz ? a.symbolWidth : a.symbolHeight) || g.defaultLegendLength;\n      };\n      g.prototype.normalizedValue = function (f) {\n        this.logarithmic && (f = this.logarithmic.log2lin(f));\n        return 1 - (this.max - f) / (this.max - this.min || 1);\n      };\n      g.prototype.toColor = function (f, d) {\n        var a = this.dataClasses,\n          c = this.stops,\n          k;\n        if (a) for (k = a.length; k--;) {\n          var b = a[k];\n          var e = b.from;\n          c = b.to;\n          if ((\"undefined\" === typeof e || f >= e) && (\"undefined\" === typeof c || f <= c)) {\n            var g = b.color;\n            d && (d.dataClass = k, d.colorIndex = b.colorIndex);\n            break;\n          }\n        } else {\n          f = this.normalizedValue(f);\n          for (k = c.length; k-- && !(f > c[k][0]););\n          e = c[k] || c[k + 1];\n          c = c[k + 1] || e;\n          f = 1 - (c[0] - f) / (c[0] - e[0] || 1);\n          g = e.color.tweenTo(c.color, f);\n        }\n        return g;\n      };\n      g.prototype.getOffset = function () {\n        var f = this.legendGroup,\n          d = this.chart.axisOffset[this.side];\n        if (f) {\n          this.axisParent = f;\n          b.prototype.getOffset.call(this);\n          var a = this.chart.legend;\n          a.allItems.forEach(function (c) {\n            c instanceof g && c.drawLegendSymbol(a, c);\n          });\n          a.render();\n          this.chart.getMargins(!0);\n          this.added || (this.added = !0, this.labelLeft = 0, this.labelRight = this.width);\n          this.chart.axisOffset[this.side] = d;\n        }\n      };\n      g.prototype.setLegendColor = function () {\n        var f = this.reversed,\n          d = f ? 1 : 0;\n        f = f ? 0 : 1;\n        d = this.horiz ? [d, 0, f, 0] : [0, f, 0, d];\n        this.legendColor = {\n          linearGradient: {\n            x1: d[0],\n            y1: d[1],\n            x2: d[2],\n            y2: d[3]\n          },\n          stops: this.stops\n        };\n      };\n      g.prototype.drawLegendSymbol = function (f, d) {\n        var a = f.padding,\n          c = f.options,\n          k = this.horiz,\n          e = t(c.symbolWidth, k ? g.defaultLegendLength : 12),\n          b = t(c.symbolHeight, k ? 12 : g.defaultLegendLength),\n          x = t(c.labelPadding, k ? 16 : 30);\n        c = t(c.itemDistance, 10);\n        this.setLegendColor();\n        d.legendSymbol || (d.legendSymbol = this.chart.renderer.rect(0, f.baseline - 11, e, b).attr({\n          zIndex: 1\n        }).add(d.legendGroup));\n        this.legendItemWidth = e + a + (k ? c : this.options.labels.x + this.maxLabelLength);\n        this.legendItemHeight = b + a + (k ? x : 0);\n      };\n      g.prototype.setState = function (f) {\n        this.series.forEach(function (d) {\n          d.setState(f);\n        });\n      };\n      g.prototype.setVisible = function () {};\n      g.prototype.getSeriesExtremes = function () {\n        var f = this.series,\n          d = f.length,\n          a;\n        this.dataMin = Infinity;\n        for (this.dataMax = -Infinity; d--;) {\n          var c = f[d];\n          var k = c.colorKey = t(c.options.colorKey, c.colorKey, c.pointValKey, c.zoneAxis, \"y\");\n          var e = c.pointArrayMap;\n          var b = c[k + \"Min\"] && c[k + \"Max\"];\n          if (c[k + \"Data\"]) var g = c[k + \"Data\"];else if (e) {\n            g = [];\n            e = e.indexOf(k);\n            var r = c.yData;\n            if (0 <= e && r) for (a = 0; a < r.length; a++) g.push(t(r[a][e], r[a]));\n          } else g = c.yData;\n          b ? (c.minColorValue = c[k + \"Min\"], c.maxColorValue = c[k + \"Max\"]) : (g = u.prototype.getExtremes.call(c, g), c.minColorValue = g.dataMin, c.maxColorValue = g.dataMax);\n          \"undefined\" !== typeof c.minColorValue && (this.dataMin = Math.min(this.dataMin, c.minColorValue), this.dataMax = Math.max(this.dataMax, c.maxColorValue));\n          b || u.prototype.applyExtremes.call(c);\n        }\n      };\n      g.prototype.drawCrosshair = function (f, d) {\n        var a = d && d.plotX,\n          c = d && d.plotY,\n          e = this.pos,\n          g = this.len;\n        if (d) {\n          var l = this.toPixels(d.getNestedProperty(d.series.colorKey));\n          l < e ? l = e - 2 : l > e + g && (l = e + g + 2);\n          d.plotX = l;\n          d.plotY = this.len - l;\n          b.prototype.drawCrosshair.call(this, f, d);\n          d.plotX = a;\n          d.plotY = c;\n          this.cross && !this.cross.addedToColorAxis && this.legendGroup && (this.cross.addClass(\"highcharts-coloraxis-marker\").add(this.legendGroup), this.cross.addedToColorAxis = !0, this.chart.styledMode || \"object\" !== typeof this.crosshair || this.cross.attr({\n            fill: this.crosshair.color\n          }));\n        }\n      };\n      g.prototype.getPlotLinePath = function (f) {\n        var d = this.left,\n          a = f.translatedValue,\n          c = this.top;\n        return E(a) ? this.horiz ? [[\"M\", a - 4, c - 6], [\"L\", a + 4, c - 6], [\"L\", a, c], [\"Z\"]] : [[\"M\", d, a], [\"L\", d - 6, a + 6], [\"L\", d - 6, a - 6], [\"Z\"]] : b.prototype.getPlotLinePath.call(this, f);\n      };\n      g.prototype.update = function (f, d) {\n        var a = this.chart.legend;\n        this.series.forEach(function (a) {\n          a.isDirtyData = !0;\n        });\n        (f.dataClasses && a.allItems || this.dataClasses) && this.destroyItems();\n        b.prototype.update.call(this, f, d);\n        this.legendItem && (this.setLegendColor(), a.colorizeItem(this, !0));\n      };\n      g.prototype.destroyItems = function () {\n        var f = this.chart;\n        this.legendItem ? f.legend.destroyItem(this) : this.legendItems && this.legendItems.forEach(function (d) {\n          f.legend.destroyItem(d);\n        });\n        f.isDirtyLegend = !0;\n      };\n      g.prototype.destroy = function () {\n        this.chart.isDirtyLegend = !0;\n        this.destroyItems();\n        b.prototype.destroy.apply(this, [].slice.call(arguments));\n      };\n      g.prototype.remove = function (f) {\n        this.destroyItems();\n        b.prototype.remove.call(this, f);\n      };\n      g.prototype.getDataClassLegendSymbols = function () {\n        var f = this,\n          d = f.chart,\n          a = f.legendItems,\n          c = d.options.legend,\n          e = c.valueDecimals,\n          b = c.valueSuffix || \"\",\n          g;\n        a.length || f.dataClasses.forEach(function (c, k) {\n          var l = c.from,\n            h = c.to,\n            A = d.numberFormatter,\n            x = !0;\n          g = \"\";\n          \"undefined\" === typeof l ? g = \"< \" : \"undefined\" === typeof h && (g = \"> \");\n          \"undefined\" !== typeof l && (g += A(l, e) + b);\n          \"undefined\" !== typeof l && \"undefined\" !== typeof h && (g += \" - \");\n          \"undefined\" !== typeof h && (g += A(h, e) + b);\n          a.push(D({\n            chart: d,\n            name: g,\n            options: {},\n            drawLegendSymbol: m.drawRectangle,\n            visible: !0,\n            setState: r,\n            isDataClass: !0,\n            setVisible: function () {\n              this.visible = x = f.visible = !x;\n              f.series.forEach(function (a) {\n                a.points.forEach(function (a) {\n                  a.dataClass === k && a.setVisible(x);\n                });\n              });\n              d.legend.colorizeItem(this, x);\n            }\n          }, c));\n        });\n        return a;\n      };\n      g.defaultColorAxisOptions = p;\n      g.defaultLegendLength = 200;\n      g.keepProps = [\"legendGroup\", \"legendItemHeight\", \"legendItemWidth\", \"legendItem\", \"legendSymbol\"];\n      return g;\n    }(b);\n    Array.prototype.push.apply(b.keepProps, h.keepProps);\n    \"\";\n    return h;\n  });\n  q(b, \"Series/ColorMapComposition.js\", [b[\"Core/Series/SeriesRegistry.js\"], b[\"Core/Utilities.js\"]], function (b, h) {\n    var u = b.seriesTypes.column.prototype,\n      p = h.addEvent,\n      q = h.defined,\n      m;\n    (function (b) {\n      function h(e) {\n        this.moveToTopOnHover && this.graphic && this.graphic.attr({\n          zIndex: e && \"hover\" === e.state ? 1 : 0\n        });\n      }\n      var n = [];\n      b.pointMembers = {\n        dataLabelOnNull: !0,\n        moveToTopOnHover: !0,\n        isValid: function () {\n          return null !== this.value && Infinity !== this.value && -Infinity !== this.value && (void 0 === this.value || !isNaN(this.value));\n        }\n      };\n      b.seriesMembers = {\n        colorKey: \"value\",\n        axisTypes: [\"xAxis\", \"yAxis\", \"colorAxis\"],\n        parallelArrays: [\"x\", \"y\", \"value\"],\n        pointArrayMap: [\"value\"],\n        trackerGroups: [\"group\", \"markerGroup\", \"dataLabelsGroup\"],\n        colorAttribs: function (e) {\n          var b = {};\n          !q(e.color) || e.state && \"normal\" !== e.state || (b[this.colorProp || \"fill\"] = e.color);\n          return b;\n        },\n        pointAttribs: u.pointAttribs\n      };\n      b.compose = function (e) {\n        var b = e.prototype.pointClass;\n        -1 === n.indexOf(b) && (n.push(b), p(b, \"afterSetState\", h));\n        return e;\n      };\n    })(m || (m = {}));\n    return m;\n  });\n  q(b, \"Series/Heatmap/HeatmapPoint.js\", [b[\"Core/Series/SeriesRegistry.js\"], b[\"Core/Utilities.js\"]], function (b, h) {\n    var u = this && this.__extends || function () {\n        var b = function (h, e) {\n          b = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (b, e) {\n            b.__proto__ = e;\n          } || function (b, e) {\n            for (var h in e) e.hasOwnProperty(h) && (b[h] = e[h]);\n          };\n          return b(h, e);\n        };\n        return function (h, e) {\n          function r() {\n            this.constructor = h;\n          }\n          b(h, e);\n          h.prototype = null === e ? Object.create(e) : (r.prototype = e.prototype, new r());\n        };\n      }(),\n      p = h.clamp,\n      q = h.defined,\n      m = h.extend,\n      w = h.pick;\n    b = function (b) {\n      function h() {\n        var e = null !== b && b.apply(this, arguments) || this;\n        e.options = void 0;\n        e.series = void 0;\n        e.value = void 0;\n        e.x = void 0;\n        e.y = void 0;\n        return e;\n      }\n      u(h, b);\n      h.prototype.applyOptions = function (e, h) {\n        e = b.prototype.applyOptions.call(this, e, h);\n        e.formatPrefix = e.isNull || null === e.value ? \"null\" : \"point\";\n        return e;\n      };\n      h.prototype.getCellAttributes = function () {\n        var b = this.series,\n          h = b.options,\n          u = (h.colsize || 1) / 2,\n          n = (h.rowsize || 1) / 2,\n          m = b.xAxis,\n          v = b.yAxis,\n          t = this.options.marker || b.options.marker;\n        b = b.pointPlacementToXValue();\n        var y = w(this.pointPadding, h.pointPadding, 0),\n          g = {\n            x1: p(Math.round(m.len - m.translate(this.x - u, !1, !0, !1, !0, -b)), -m.len, 2 * m.len),\n            x2: p(Math.round(m.len - m.translate(this.x + u, !1, !0, !1, !0, -b)), -m.len, 2 * m.len),\n            y1: p(Math.round(v.translate(this.y - n, !1, !0, !1, !0)), -v.len, 2 * v.len),\n            y2: p(Math.round(v.translate(this.y + n, !1, !0, !1, !0)), -v.len, 2 * v.len)\n          };\n        [[\"width\", \"x\"], [\"height\", \"y\"]].forEach(function (b) {\n          var d = b[0];\n          b = b[1];\n          var a = b + \"1\",\n            c = b + \"2\",\n            f = Math.abs(g[a] - g[c]),\n            e = t && t.lineWidth || 0,\n            h = Math.abs(g[a] + g[c]) / 2;\n          d = t && t[d];\n          q(d) && d < f && (d = d / 2 + e / 2, g[a] = h - d, g[c] = h + d);\n          y && (\"y\" === b && (a = c, c = b + \"1\"), g[a] += y, g[c] -= y);\n        });\n        return g;\n      };\n      h.prototype.haloPath = function (b) {\n        if (!b) return [];\n        var e = this.shapeArgs;\n        return [\"M\", e.x - b, e.y - b, \"L\", e.x - b, e.y + e.height + b, e.x + e.width + b, e.y + e.height + b, e.x + e.width + b, e.y - b, \"Z\"];\n      };\n      h.prototype.isValid = function () {\n        return Infinity !== this.value && -Infinity !== this.value;\n      };\n      return h;\n    }(b.seriesTypes.scatter.prototype.pointClass);\n    m(b.prototype, {\n      dataLabelOnNull: !0,\n      moveToTopOnHover: !0,\n      ttBelow: !1\n    });\n    return b;\n  });\n  q(b, \"Series/Heatmap/HeatmapSeries.js\", [b[\"Core/Color/Color.js\"], b[\"Series/ColorMapComposition.js\"], b[\"Series/Heatmap/HeatmapPoint.js\"], b[\"Core/Legend/LegendSymbol.js\"], b[\"Core/Series/SeriesRegistry.js\"], b[\"Core/Renderer/SVG/SVGRenderer.js\"], b[\"Core/Utilities.js\"]], function (b, h, q, p, z, m, w) {\n    var u = this && this.__extends || function () {\n        var b = function (d, a) {\n          b = Object.setPrototypeOf || {\n            __proto__: []\n          } instanceof Array && function (a, b) {\n            a.__proto__ = b;\n          } || function (a, b) {\n            for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);\n          };\n          return b(d, a);\n        };\n        return function (d, a) {\n          function c() {\n            this.constructor = d;\n          }\n          b(d, a);\n          d.prototype = null === a ? Object.create(a) : (c.prototype = a.prototype, new c());\n        };\n      }(),\n      n = z.series,\n      e = z.seriesTypes,\n      r = e.column,\n      F = e.scatter,\n      D = m.prototype.symbols,\n      E = w.extend,\n      v = w.fireEvent,\n      t = w.isNumber,\n      y = w.merge,\n      g = w.pick;\n    m = function (f) {\n      function d() {\n        var a = null !== f && f.apply(this, arguments) || this;\n        a.colorAxis = void 0;\n        a.data = void 0;\n        a.options = void 0;\n        a.points = void 0;\n        a.valueMax = NaN;\n        a.valueMin = NaN;\n        return a;\n      }\n      u(d, f);\n      d.prototype.drawPoints = function () {\n        var a = this;\n        if ((this.options.marker || {}).enabled || this._hasPointMarkers) n.prototype.drawPoints.call(this), this.points.forEach(function (c) {\n          c.graphic && (c.graphic[a.chart.styledMode ? \"css\" : \"animate\"](a.colorAttribs(c)), null === c.value && c.graphic.addClass(\"highcharts-null-point\"));\n        });\n      };\n      d.prototype.getExtremes = function () {\n        var a = n.prototype.getExtremes.call(this, this.valueData),\n          c = a.dataMin;\n        a = a.dataMax;\n        t(c) && (this.valueMin = c);\n        t(a) && (this.valueMax = a);\n        return n.prototype.getExtremes.call(this);\n      };\n      d.prototype.getValidPoints = function (a, c) {\n        return n.prototype.getValidPoints.call(this, a, c, !0);\n      };\n      d.prototype.hasData = function () {\n        return !!this.processedXData.length;\n      };\n      d.prototype.init = function () {\n        n.prototype.init.apply(this, arguments);\n        var a = this.options;\n        a.pointRange = g(a.pointRange, a.colsize || 1);\n        this.yAxis.axisPointRange = a.rowsize || 1;\n        D.ellipse = D.circle;\n        a.marker && (a.marker.r = a.borderRadius);\n      };\n      d.prototype.markerAttribs = function (a, c) {\n        var b = a.marker || {},\n          d = this.options.marker || {},\n          f = a.shapeArgs || {},\n          e = {};\n        if (a.hasImage) return {\n          x: a.plotX,\n          y: a.plotY\n        };\n        if (c) {\n          var g = d.states[c] || {};\n          var h = b.states && b.states[c] || {};\n          [[\"width\", \"x\"], [\"height\", \"y\"]].forEach(function (a) {\n            e[a[0]] = (h[a[0]] || g[a[0]] || f[a[0]]) + (h[a[0] + \"Plus\"] || g[a[0] + \"Plus\"] || 0);\n            e[a[1]] = f[a[1]] + (f[a[0]] - e[a[0]]) / 2;\n          });\n        }\n        return c ? e : f;\n      };\n      d.prototype.pointAttribs = function (a, c) {\n        var d = n.prototype.pointAttribs.call(this, a, c),\n          f = this.options || {},\n          e = this.chart.options.plotOptions || {},\n          g = e.series || {},\n          h = e.heatmap || {};\n        e = a && a.options.borderColor || f.borderColor || h.borderColor || g.borderColor;\n        g = a && a.options.borderWidth || f.borderWidth || h.borderWidth || g.borderWidth || d[\"stroke-width\"];\n        d.stroke = a && a.marker && a.marker.lineColor || f.marker && f.marker.lineColor || e || this.color;\n        d[\"stroke-width\"] = g;\n        c && (a = y(f.states[c], f.marker && f.marker.states[c], a && a.options.states && a.options.states[c] || {}), c = a.brightness, d.fill = a.color || b.parse(d.fill).brighten(c || 0).get(), d.stroke = a.lineColor);\n        return d;\n      };\n      d.prototype.setClip = function (a) {\n        var b = this.chart;\n        n.prototype.setClip.apply(this, arguments);\n        (!1 !== this.options.clip || a) && this.markerGroup.clip((a || this.clipBox) && this.sharedClipKey ? b.sharedClips[this.sharedClipKey] : b.clipRect);\n      };\n      d.prototype.translate = function () {\n        var a = this.options,\n          b = a.marker && a.marker.symbol || \"rect\",\n          d = D[b] ? b : \"rect\",\n          f = -1 !== [\"circle\", \"square\"].indexOf(d);\n        this.generatePoints();\n        this.points.forEach(function (c) {\n          var e = c.getCellAttributes(),\n            g = {};\n          g.x = Math.min(e.x1, e.x2);\n          g.y = Math.min(e.y1, e.y2);\n          g.width = Math.max(Math.abs(e.x2 - e.x1), 0);\n          g.height = Math.max(Math.abs(e.y2 - e.y1), 0);\n          var h = c.hasImage = 0 === (c.marker && c.marker.symbol || b || \"\").indexOf(\"url\");\n          if (f) {\n            var k = Math.abs(g.width - g.height);\n            g.x = Math.min(e.x1, e.x2) + (g.width < g.height ? 0 : k / 2);\n            g.y = Math.min(e.y1, e.y2) + (g.width < g.height ? k / 2 : 0);\n            g.width = g.height = Math.min(g.width, g.height);\n          }\n          k = {\n            plotX: (e.x1 + e.x2) / 2,\n            plotY: (e.y1 + e.y2) / 2,\n            clientX: (e.x1 + e.x2) / 2,\n            shapeType: \"path\",\n            shapeArgs: y(!0, g, {\n              d: D[d](g.x, g.y, g.width, g.height, {\n                r: a.borderRadius\n              })\n            })\n          };\n          h && (c.marker = {\n            width: g.width,\n            height: g.height\n          });\n          E(c, k);\n        });\n        v(this, \"afterTranslate\");\n      };\n      d.defaultOptions = y(F.defaultOptions, {\n        animation: !1,\n        borderRadius: 0,\n        borderWidth: 0,\n        nullColor: \"#f7f7f7\",\n        dataLabels: {\n          formatter: function () {\n            var a = this.series.chart.numberFormatter,\n              b = this.point.value;\n            return t(b) ? a(b, -1) : \"\";\n          },\n          inside: !0,\n          verticalAlign: \"middle\",\n          crop: !1,\n          overflow: !1,\n          padding: 0\n        },\n        marker: {\n          symbol: \"rect\",\n          radius: 0,\n          lineColor: void 0,\n          states: {\n            hover: {\n              lineWidthPlus: 0\n            },\n            select: {}\n          }\n        },\n        clip: !0,\n        pointRange: null,\n        tooltip: {\n          pointFormat: \"{point.x}, {point.y}: {point.value}<br/>\"\n        },\n        states: {\n          hover: {\n            halo: !1,\n            brightness: .2\n          }\n        }\n      });\n      return d;\n    }(F);\n    E(m.prototype, {\n      axisTypes: h.seriesMembers.axisTypes,\n      colorKey: h.seriesMembers.colorKey,\n      directTouch: !0,\n      getExtremesFromAll: !0,\n      parallelArrays: h.seriesMembers.parallelArrays,\n      pointArrayMap: [\"y\", \"value\"],\n      pointClass: q,\n      trackerGroups: h.seriesMembers.trackerGroups,\n      alignDataLabel: r.prototype.alignDataLabel,\n      colorAttribs: h.seriesMembers.colorAttribs,\n      drawLegendSymbol: p.drawRectangle,\n      getSymbol: n.prototype.getSymbol\n    });\n    h.compose(m);\n    z.registerSeriesType(\"heatmap\", m);\n    \"\";\n    \"\";\n    return m;\n  });\n  q(b, \"masters/modules/heatmap.src.js\", [b[\"Core/Globals.js\"], b[\"Core/Axis/Color/ColorAxis.js\"]], function (b, h) {\n    b.ColorAxis = h;\n    h.compose(b.Chart, b.Fx, b.Legend, b.Series);\n  });\n});","map":{"version":3,"mappings":"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","names":["factory","module","define","Highcharts","undefined","_registerModule","obj","path","args","fn","CustomEvent","window","detail","_modules","Color","U","color","addEvent","extend","merge","pick","splat","ColorAxisComposition","onChartAfterGetAxes","_this","options","axisOptions","i","ColorAxisClass","onLegendAfterGetAllItems","e","destroyItem","item","colorAxisItems","forEach","colorAxis","series","point","onLegendAfterColorizeItem","fill","onLegendAfterUpdate","colorAxes","d","onSeriesAfterTranslate","onSeriesBindAxes","axisTypes","pointSetVisible","vis","method","key","seriesTranslateColors","nullColor","colorKey","points","value","wrapChartCreateAxis","ChartClass","superCreateAxis","ChartClass.prototype.createAxis","type","arguments","axis","index","isX","wrapFxFillSetter","wrapFxStrokeSetter","composedClasses","compose","ColorAxisType","FxClass","LegendClass","SeriesClass","chartProto","fxProto","optionalAxis","translateColors","setVisible","colorAxisDefaults","lineWidth","minPadding","maxPadding","gridLineWidth","tickPixelInterval","startOnTick","endOnTick","offset","marker","animation","duration","width","labels","overflow","rotation","minColor","maxColor","tickLength","showInLegend","Axis","ColorAxisDefaults","H","LegendSymbol","SeriesRegistry","__extends","extendStatics","b","Object","__proto__","Array","p","__","noop","Series","isNumber","ColorAxis","_super","chart","userOptions","ColorAxis.compose","ColorAxis.prototype.init","legend","horiz","visible","showEmpty","title","coll","side","reversed","opposite","initDataClasses","initStops","zoomEnabled","ColorAxis.prototype.initDataClasses","len","dataClasses","colorCounter","colorCount","legendItems","dataClass","colors","ColorAxis.prototype.hasData","length","ColorAxis.prototype.setTickPositions","ColorAxis.prototype.initStops","stops","stop","prototype","ColorAxis.prototype.setOptions","ColorAxis.prototype.setAxisSize","symbol","legendSymbol","legendOptions","y","x","height","ColorAxis.prototype.normalizedValue","logarithmic","max","min","ColorAxis.prototype.toColor","to","from","pos","normalizedValue","ColorAxis.prototype.getOffset","group","legendGroup","sideOffset","axisParent","legend_1","added","labelLeft","labelRight","ColorAxis.prototype.setLegendColor","one","zero","grad","legendColor","linearGradient","x1","y1","x2","y2","ColorAxis.prototype.drawLegendSymbol","padding","labelPadding","itemDistance","zIndex","legendItemWidth","legendItemHeight","ColorAxis.prototype.setState","state","ColorAxis.prototype.setVisible","ColorAxis.prototype.getSeriesExtremes","j","Infinity","cSeries","calculatedExtremes","pointArrayMap","colorValArray","colorValIndex","yData","cExtremes","Math","ColorAxis.prototype.drawCrosshair","plotX","plotY","axisPos","axisLen","toPixels","crossPos","cross","crosshair","ColorAxis.prototype.getPlotLinePath","left","top","ColorAxis.prototype.update","newOptions","redraw","destroyItems","legendItem","setLegendColor","ColorAxis.prototype.destroyItems","ColorAxis.prototype.destroy","ColorAxis.prototype.remove","ColorAxis.prototype.getDataClassLegendSymbols","valueDecimals","valueSuffix","name","numberFormatter","drawLegendSymbol","setState","isDataClass","columnProto","defined","ColorMapComposition","onPointAfterSetState","moveToTopOnHover","graphic","dataLabelOnNull","isValid","pointIsValid","isNaN","parallelArrays","trackerGroups","colorAttribs","seriesColorAttribs","ret","pointAttribs","PointClass","clamp","HeatmapPoint","HeatmapPoint.prototype.applyOptions","HeatmapPoint.prototype.getCellAttributes","seriesOptions","xPad","yPad","xAxis","yAxis","markerOptions","pointPlacement","pointPadding","cellAttr","dimensions","dimension","prop","direction","start","end","borderWidth","plotPos","widthOrHeight","halfCellSize","HeatmapPoint.prototype.haloPath","size","rect","HeatmapPoint.prototype.isValid","ttBelow","SVGRenderer","_a","ColumnSeries","ScatterSeries","symbols","fireEvent","HeatmapSeries","NaN","HeatmapSeries.prototype.drawPoints","enabled","HeatmapSeries.prototype.getExtremes","dataMin","dataMax","HeatmapSeries.prototype.getValidPoints","insideOnly","HeatmapSeries.prototype.hasData","HeatmapSeries.prototype.init","HeatmapSeries.prototype.markerAttribs","pointMarkerOptions","seriesMarkerOptions","shapeArgs","attribs","seriesStateOptions","pointStateOptions","HeatmapSeries.prototype.pointAttribs","attr","plotOptions","seriesPlotOptions","heatmapPlotOptions","borderColor","stateOptions","brightness","HeatmapSeries.prototype.setClip","markerGroup","clipBox","sharedClipKey","HeatmapSeries.prototype.translate","shape","hasRegularShape","generatePoints","hasImage","indexOf","sizeDiff","pointAttr","clientX","shapeType","r","borderRadius","dataLabels","formatter","inside","verticalAlign","crop","radius","lineColor","states","hover","lineWidthPlus","select","clip","pointRange","tooltip","pointFormat","halo","directTouch","getExtremesFromAll","pointClass","alignDataLabel","getSymbol","Chart","Fx","Legend"],"sources":["C:\\Users\\Sussman\\Documents\\AASCHOOL\\320\\group-project\\lightning\\client\\node_modules\\highcharts\\modules\\heatmap.src.js"],"sourcesContent":["/**\n * @license Highmaps JS v10.2.1 (2022-08-29)\n *\n * (c) 2009-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/heatmap', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(\n                    new CustomEvent(\n                        'HighchartsModuleLoaded',\n                        { detail: { path: path, module: obj[path] }\n                    })\n                );\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisComposition.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var addEvent = U.addEvent,\n            extend = U.extend,\n            merge = U.merge,\n            pick = U.pick,\n            splat = U.splat;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ColorAxisComposition;\n        (function (ColorAxisComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var ColorAxisClass;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ColorAxisType, ChartClass, FxClass, LegendClass, SeriesClass) {\n                if (!ColorAxisClass) {\n                    ColorAxisClass = ColorAxisType;\n                }\n                if (composedClasses.indexOf(ChartClass) === -1) {\n                    composedClasses.push(ChartClass);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.collectionsWithUpdate.push('colorAxis');\n                    chartProto.collectionsWithInit.colorAxis = [\n                        chartProto.addColorAxis\n                    ];\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    wrapChartCreateAxis(ChartClass);\n                }\n                if (composedClasses.indexOf(FxClass) === -1) {\n                    composedClasses.push(FxClass);\n                    var fxProto = FxClass.prototype;\n                    fxProto.fillSetter = wrapFxFillSetter;\n                    fxProto.strokeSetter = wrapFxStrokeSetter;\n                }\n                if (composedClasses.indexOf(LegendClass) === -1) {\n                    composedClasses.push(LegendClass);\n                    addEvent(LegendClass, 'afterGetAllItems', onLegendAfterGetAllItems);\n                    addEvent(LegendClass, 'afterColorizeItem', onLegendAfterColorizeItem);\n                    addEvent(LegendClass, 'afterUpdate', onLegendAfterUpdate);\n                }\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    extend(SeriesClass.prototype, {\n                        optionalAxis: 'colorAxis',\n                        translateColors: seriesTranslateColors\n                    });\n                    extend(SeriesClass.prototype.pointClass.prototype, {\n                        setVisible: pointSetVisible\n                    });\n                    addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate);\n                    addEvent(SeriesClass, 'bindAxes', onSeriesBindAxes);\n                }\n            }\n            ColorAxisComposition.compose = compose;\n            /**\n             * Extend the chart getAxes method to also get the color axis.\n             * @private\n             */\n            function onChartAfterGetAxes() {\n                var _this = this;\n                var options = this.options;\n                this.colorAxis = [];\n                if (options.colorAxis) {\n                    options.colorAxis = splat(options.colorAxis);\n                    options.colorAxis.forEach(function (axisOptions, i) {\n                        axisOptions.index = i;\n                        new ColorAxisClass(_this, axisOptions); // eslint-disable-line no-new\n                    });\n                }\n            }\n            /**\n             * Add the color axis. This also removes the axis' own series to prevent\n             * them from showing up individually.\n             * @private\n             */\n            function onLegendAfterGetAllItems(e) {\n                var _this = this;\n                var colorAxes = this.chart.colorAxis || [],\n                    destroyItem = function (item) {\n                        var i = e.allItems.indexOf(item);\n                    if (i !== -1) {\n                        // #15436\n                        _this.destroyItem(e.allItems[i]);\n                        e.allItems.splice(i, 1);\n                    }\n                };\n                var colorAxisItems = [],\n                    options,\n                    i;\n                colorAxes.forEach(function (colorAxis) {\n                    options = colorAxis.options;\n                    if (options && options.showInLegend) {\n                        // Data classes\n                        if (options.dataClasses && options.visible) {\n                            colorAxisItems = colorAxisItems.concat(colorAxis.getDataClassLegendSymbols());\n                            // Gradient legend\n                        }\n                        else if (options.visible) {\n                            // Add this axis on top\n                            colorAxisItems.push(colorAxis);\n                        }\n                        // If dataClasses are defined or showInLegend option is not set\n                        // to true, do not add color axis' series to legend.\n                        colorAxis.series.forEach(function (series) {\n                            if (!series.options.showInLegend || options.dataClasses) {\n                                if (series.options.legendType === 'point') {\n                                    series.points.forEach(function (point) {\n                                        destroyItem(point);\n                                    });\n                                }\n                                else {\n                                    destroyItem(series);\n                                }\n                            }\n                        });\n                    }\n                });\n                i = colorAxisItems.length;\n                while (i--) {\n                    e.allItems.unshift(colorAxisItems[i]);\n                }\n            }\n            /**\n             * @private\n             */\n            function onLegendAfterColorizeItem(e) {\n                if (e.visible && e.item.legendColor) {\n                    e.item.legendSymbol.attr({\n                        fill: e.item.legendColor\n                    });\n                }\n            }\n            /**\n             * Updates in the legend need to be reflected in the color axis. (#6888)\n             * @private\n             */\n            function onLegendAfterUpdate() {\n                var colorAxes = this.chart.colorAxis;\n                if (colorAxes) {\n                    colorAxes.forEach(function (colorAxis) {\n                        colorAxis.update({}, arguments[2]);\n                    });\n                }\n            }\n            /**\n             * Calculate and set colors for points.\n             * @private\n             */\n            function onSeriesAfterTranslate() {\n                if (this.chart.colorAxis &&\n                    this.chart.colorAxis.length ||\n                    this.colorAttribs) {\n                    this.translateColors();\n                }\n            }\n            /**\n             * Add colorAxis to series axisTypes.\n             * @private\n             */\n            function onSeriesBindAxes() {\n                var axisTypes = this.axisTypes;\n                if (!axisTypes) {\n                    this.axisTypes = ['colorAxis'];\n                }\n                else if (axisTypes.indexOf('colorAxis') === -1) {\n                    axisTypes.push('colorAxis');\n                }\n            }\n            /**\n             * Set the visibility of a single point\n             * @private\n             * @function Highcharts.colorPointMixin.setVisible\n             * @param {boolean} visible\n             */\n            function pointSetVisible(vis) {\n                var point = this,\n                    method = vis ? 'show' : 'hide';\n                point.visible = point.options.visible = Boolean(vis);\n                // Show and hide associated elements\n                ['graphic', 'dataLabel'].forEach(function (key) {\n                    if (point[key]) {\n                        point[key][method]();\n                    }\n                });\n                this.series.buildKDTree(); // rebuild kdtree #13195\n            }\n            ColorAxisComposition.pointSetVisible = pointSetVisible;\n            /**\n             * In choropleth maps, the color is a result of the value, so this needs\n             * translation too\n             * @private\n             * @function Highcharts.colorSeriesMixin.translateColors\n             */\n            function seriesTranslateColors() {\n                var series = this,\n                    points = this.data.length ? this.data : this.points,\n                    nullColor = this.options.nullColor,\n                    colorAxis = this.colorAxis,\n                    colorKey = this.colorKey;\n                points.forEach(function (point) {\n                    var value = point.getNestedProperty(colorKey),\n                        color = point.options.color || (point.isNull || point.value === null ?\n                            nullColor :\n                            (colorAxis && typeof value !== 'undefined') ?\n                                colorAxis.toColor(value,\n                        point) :\n                                point.color || series.color);\n                    if (color && point.color !== color) {\n                        point.color = color;\n                        if (series.options.legendType === 'point' && point.legendItem) {\n                            series.chart.legend.colorizeItem(point, point.visible);\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function wrapChartCreateAxis(ChartClass) {\n                var superCreateAxis = ChartClass.prototype.createAxis;\n                ChartClass.prototype.createAxis = function (type, options) {\n                    if (type !== 'colorAxis') {\n                        return superCreateAxis.apply(this, arguments);\n                    }\n                    var axis = new ColorAxisClass(this,\n                        merge(options.axis, {\n                            index: this[type].length,\n                            isX: false\n                        }));\n                    this.isDirtyLegend = true;\n                    // Clear before 'bindAxes' (#11924)\n                    this.axes.forEach(function (axis) {\n                        axis.series = [];\n                    });\n                    this.series.forEach(function (series) {\n                        series.bindAxes();\n                        series.isDirtyData = true;\n                    });\n                    if (pick(options.redraw, true)) {\n                        this.redraw(options.animation);\n                    }\n                    return axis;\n                };\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxFillSetter() {\n                this.elem.attr('fill', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxStrokeSetter() {\n                this.elem.attr('stroke', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n        })(ColorAxisComposition || (ColorAxisComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A color axis for series. Visually, the color\n         * axis will appear as a gradient or as separate items inside the\n         * legend, depending on whether the axis is scalar or based on data\n         * classes.\n         *\n         * For supported color formats, see the\n         * [docs article about colors](https://www.highcharts.com/docs/chart-design-and-style/colors).\n         *\n         * A scalar color axis is represented by a gradient. The colors either\n         * range between the [minColor](#colorAxis.minColor) and the\n         * [maxColor](#colorAxis.maxColor), or for more fine grained control the\n         * colors can be defined in [stops](#colorAxis.stops). Often times, the\n         * color axis needs to be adjusted to get the right color spread for the\n         * data. In addition to stops, consider using a logarithmic\n         * [axis type](#colorAxis.type), or setting [min](#colorAxis.min) and\n         * [max](#colorAxis.max) to avoid the colors being determined by\n         * outliers.\n         *\n         * When [dataClasses](#colorAxis.dataClasses) are used, the ranges are\n         * subdivided into separate classes like categories based on their\n         * values. This can be used for ranges between two values, but also for\n         * a true category. However, when your data is categorized, it may be as\n         * convenient to add each category to a separate series.\n         *\n         * Color axis does not work with: `sankey`, `sunburst`, `dependencywheel`,\n         * `networkgraph`, `wordcloud`, `venn`, `gauge` and `solidgauge` series\n         * types.\n         *\n         * Since v7.2.0 `colorAxis` can also be an array of options objects.\n         *\n         * See [the Axis object](/class-reference/Highcharts.Axis) for\n         * programmatic access to the axis.\n         *\n         * @sample       {highcharts} highcharts/coloraxis/custom-color-key\n         *               Column chart with color axis\n         * @sample       {highcharts} highcharts/coloraxis/horizontal-layout\n         *               Horizontal layout\n         * @sample       {highmaps} maps/coloraxis/dataclasscolor\n         *               With data classes\n         * @sample       {highmaps} maps/coloraxis/mincolor-maxcolor\n         *               Min color and max color\n         *\n         * @extends      xAxis\n         * @excluding    alignTicks, allowDecimals, alternateGridColor, breaks,\n         *               categories, crosshair, dateTimeLabelFormats, height, left,\n         *               lineWidth, linkedTo, maxZoom, minRange, minTickInterval,\n         *               offset, opposite, pane, plotBands, plotLines,\n         *               reversedStacks, scrollbar, showEmpty, title, top, width,\n         *               zoomEnabled\n         * @product      highcharts highstock highmaps\n         * @type         {*|Array<*>}\n         * @optionparent colorAxis\n         */\n        var colorAxisDefaults = {\n                /**\n                 * Whether to allow decimals on the color axis.\n                 * @type      {boolean}\n                 * @default   true\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.allowDecimals\n                 */\n                /**\n                 * Determines how to set each data class' color if no individual\n                 * color is set. The default value, `tween`, computes intermediate\n                 * colors between `minColor` and `maxColor`. The other possible\n                 * value, `category`, pulls colors from the global or chart specific\n                 * [colors](#colors) array.\n                 *\n                 * @sample {highmaps} maps/coloraxis/dataclasscolor/\n                 *         Category colors\n                 *\n                 * @type       {string}\n                 * @default    tween\n                 * @product    highcharts highstock highmaps\n                 * @validvalue [\"tween\", \"category\"]\n                 * @apioption  colorAxis.dataClassColor\n                 */\n                /**\n                 * An array of data classes or ranges for the choropleth map. If\n                 * none given, the color axis is scalar and values are distributed\n                 * as a gradient between the minimum and maximum colors.\n                 *\n                 * @sample {highmaps} maps/demo/data-class-ranges/\n                 *         Multiple ranges\n                 *\n                 * @sample {highmaps} maps/demo/data-class-two-ranges/\n                 *         Two ranges\n                 *\n                 * @type      {Array<*>}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.dataClasses\n                 */\n                /**\n                 * The layout of the color axis. Can be `'horizontal'` or `'vertical'`.\n                 * If none given, the color axis has the same layout as the legend.\n                 *\n                 * @sample highcharts/coloraxis/horizontal-layout/\n                 *         Horizontal color axis layout with vertical legend\n                 *\n                 * @type      {string|undefined}\n                 * @since     7.2.0\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.layout\n                 */\n                /**\n                 * The color of each data class. If not set, the color is pulled\n                 * from the global or chart-specific [colors](#colors) array. In\n                 * styled mode, this option is ignored. Instead, use colors defined\n                 * in CSS.\n                 *\n                 * @sample {highmaps} maps/demo/data-class-two-ranges/\n                 *         Explicit colors\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.dataClasses.color\n                 */\n                /**\n                 * The start of the value range that the data class represents,\n                 * relating to the point value.\n                 *\n                 * The range of each `dataClass` is closed in both ends, but can be\n                 * overridden by the next `dataClass`.\n                 *\n                 * @type      {number}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.dataClasses.from\n                 */\n                /**\n                 * The name of the data class as it appears in the legend.\n                 * If no name is given, it is automatically created based on the\n                 * `from` and `to` values. For full programmatic control,\n                 * [legend.labelFormatter](#legend.labelFormatter) can be used.\n                 * In the formatter, `this.from` and `this.to` can be accessed.\n                 *\n                 * @sample {highmaps} maps/coloraxis/dataclasses-name/\n                 *         Named data classes\n                 *\n                 * @sample {highmaps} maps/coloraxis/dataclasses-labelformatter/\n                 *         Formatted data classes\n                 *\n                 * @type      {string}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.dataClasses.name\n                 */\n                /**\n                 * The end of the value range that the data class represents,\n                 * relating to the point value.\n                 *\n                 * The range of each `dataClass` is closed in both ends, but can be\n                 * overridden by the next `dataClass`.\n                 *\n                 * @type      {number}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.dataClasses.to\n                 */\n                /** @ignore-option */\n                lineWidth: 0,\n                /**\n                 * Padding of the min value relative to the length of the axis. A\n                 * padding of 0.05 will make a 100px axis 5px longer.\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                minPadding: 0,\n                /**\n                 * The maximum value of the axis in terms of map point values. If\n                 * `null`, the max value is automatically calculated. If the\n                 * `endOnTick` option is true, the max value might be rounded up.\n                 *\n                 * @sample {highmaps} maps/coloraxis/gridlines/\n                 *         Explicit min and max to reduce the effect of outliers\n                 *\n                 * @type      {number}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.max\n                 */\n                /**\n                 * The minimum value of the axis in terms of map point values. If\n                 * `null`, the min value is automatically calculated. If the\n                 * `startOnTick` option is true, the min value might be rounded\n                 * down.\n                 *\n                 * @sample {highmaps} maps/coloraxis/gridlines/\n                 *         Explicit min and max to reduce the effect of outliers\n                 *\n                 * @type      {number}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.min\n                 */\n                /**\n                 * Padding of the max value relative to the length of the axis. A\n                 * padding of 0.05 will make a 100px axis 5px longer.\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                maxPadding: 0,\n                /**\n                 * Color of the grid lines extending from the axis across the\n                 * gradient.\n                 *\n                 * @sample {highmaps} maps/coloraxis/gridlines/\n                 *         Grid lines demonstrated\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @default   #e6e6e6\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.gridLineColor\n                 */\n                /**\n                 * The width of the grid lines extending from the axis across the\n                 * gradient of a scalar color axis.\n                 *\n                 * @sample {highmaps} maps/coloraxis/gridlines/\n                 *         Grid lines demonstrated\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                gridLineWidth: 1,\n                /**\n                 * The interval of the tick marks in axis units. When `null`, the\n                 * tick interval is computed to approximately follow the\n                 * `tickPixelInterval`.\n                 *\n                 * @type      {number}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.tickInterval\n                 */\n                /**\n                 * If [tickInterval](#colorAxis.tickInterval) is `null` this option\n                 * sets the approximate pixel interval of the tick marks.\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                tickPixelInterval: 72,\n                /**\n                 * Whether to force the axis to start on a tick. Use this option\n                 * with the `maxPadding` option to control the axis start.\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                startOnTick: true,\n                /**\n                 * Whether to force the axis to end on a tick. Use this option with\n                 * the [maxPadding](#colorAxis.maxPadding) option to control the\n                 * axis end.\n                 *\n                 * @product highcharts highstock highmaps\n                 */\n                endOnTick: true,\n                /** @ignore */\n                offset: 0,\n                /**\n                 * The triangular marker on a scalar color axis that points to the\n                 * value of the hovered area. To disable the marker, set\n                 * `marker: null`.\n                 *\n                 * @sample {highmaps} maps/coloraxis/marker/\n                 *         Black marker\n                 *\n                 * @declare Highcharts.PointMarkerOptionsObject\n                 * @product highcharts highstock highmaps\n                 */\n                marker: {\n                    /**\n                     * Animation for the marker as it moves between values. Set to\n                     * `false` to disable animation. Defaults to `{ duration: 50 }`.\n                     *\n                     * @type    {boolean|Partial<Highcharts.AnimationOptionsObject>}\n                     * @product highcharts highstock highmaps\n                     */\n                    animation: {\n                        /** @internal */\n                        duration: 50\n                    },\n                    /** @internal */\n                    width: 0.01,\n                    /**\n                     * The color of the marker.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highcharts highstock highmaps\n                     */\n                    color: \"#999999\" /* Palette.neutralColor40 */\n                },\n                /**\n                 * The axis labels show the number for each tick.\n                 *\n                 * For more live examples on label options, see [xAxis.labels in the\n                 * Highcharts API.](/highcharts#xAxis.labels)\n                 *\n                 * @extends xAxis.labels\n                 * @product highcharts highstock highmaps\n                 */\n                labels: {\n                    /**\n                     * How to handle overflowing labels on horizontal color axis. If set\n                     * to `\"allow\"`, it will not be aligned at all. By default it\n                     * `\"justify\"` labels inside the chart area. If there is room to\n                     * move it, it will be aligned to the edge, else it will be removed.\n                     *\n                     * @validvalue [\"allow\", \"justify\"]\n                     * @product    highcharts highstock highmaps\n                     */\n                    overflow: 'justify',\n                    rotation: 0\n                },\n                /**\n                 * The color to represent the minimum of the color axis. Unless\n                 * [dataClasses](#colorAxis.dataClasses) or\n                 * [stops](#colorAxis.stops) are set, the gradient starts at this\n                 * value.\n                 *\n                 * If dataClasses are set, the color is based on minColor and\n                 * maxColor unless a color is set for each data class, or the\n                 * [dataClassColor](#colorAxis.dataClassColor) is set.\n                 *\n                 * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n                 *         Min and max colors on scalar (gradient) axis\n                 * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n                 *         On data classes\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product highcharts highstock highmaps\n                 */\n                minColor: \"#e6ebf5\" /* Palette.highlightColor10 */,\n                /**\n                 * The color to represent the maximum of the color axis. Unless\n                 * [dataClasses](#colorAxis.dataClasses) or\n                 * [stops](#colorAxis.stops) are set, the gradient ends at this\n                 * value.\n                 *\n                 * If dataClasses are set, the color is based on minColor and\n                 * maxColor unless a color is set for each data class, or the\n                 * [dataClassColor](#colorAxis.dataClassColor) is set.\n                 *\n                 * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n                 *         Min and max colors on scalar (gradient) axis\n                 * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n                 *         On data classes\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product highcharts highstock highmaps\n                 */\n                maxColor: \"#003399\" /* Palette.highlightColor100 */,\n                /**\n                 * Color stops for the gradient of a scalar color axis. Use this in\n                 * cases where a linear gradient between a `minColor` and `maxColor`\n                 * is not sufficient. The stops is an array of tuples, where the\n                 * first item is a float between 0 and 1 assigning the relative\n                 * position in the gradient, and the second item is the color.\n                 *\n                 * @sample highcharts/coloraxis/coloraxis-stops/\n                 *         Color axis stops\n                 * @sample highcharts/coloraxis/color-key-with-stops/\n                 *         Color axis stops with custom colorKey\n                 * @sample {highmaps} maps/demo/heatmap/\n                 *         Heatmap with three color stops\n                 *\n                 * @type      {Array<Array<number,Highcharts.ColorString>>}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.stops\n                 */\n                /**\n                 * The pixel length of the main tick marks on the color axis.\n                 */\n                tickLength: 5,\n                /**\n                 * The type of interpolation to use for the color axis. Can be\n                 * `linear` or `logarithmic`.\n                 *\n                 * @sample highcharts/coloraxis/logarithmic-with-emulate-negative-values/\n                 *         Logarithmic color axis with extension to emulate negative\n                 *         values\n                 *\n                 * @type      {Highcharts.ColorAxisTypeValue}\n                 * @default   linear\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.type\n                 */\n                /**\n                 * Whether to reverse the axis so that the highest number is closest\n                 * to the origin. Defaults to `false` in a horizontal legend and\n                 * `true` in a vertical legend, where the smallest value starts on\n                 * top.\n                 *\n                 * @type      {boolean}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.reversed\n                 */\n                /**\n                 * @product   highcharts highstock highmaps\n                 * @excluding afterBreaks, pointBreak, pointInBreak\n                 * @apioption colorAxis.events\n                 */\n                /**\n                 * Fires when the legend item belonging to the colorAxis is clicked.\n                 * One parameter, `event`, is passed to the function.\n                 *\n                 * @type      {Function}\n                 * @product   highcharts highstock highmaps\n                 * @apioption colorAxis.events.legendItemClick\n                 */\n                /**\n                 * Whether to display the colorAxis in the legend.\n                 *\n                 * @sample highcharts/coloraxis/hidden-coloraxis-with-3d-chart/\n                 *         Hidden color axis with 3d chart\n                 *\n                 * @see [heatmap.showInLegend](#series.heatmap.showInLegend)\n                 *\n                 * @since   4.2.7\n                 * @product highcharts highstock highmaps\n                 */\n                showInLegend: true\n            };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return colorAxisDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Color/Color.js'], _modules['Core/Axis/Color/ColorAxisComposition.js'], _modules['Core/Axis/Color/ColorAxisDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Legend/LegendSymbol.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Axis, Color, ColorAxisComposition, ColorAxisDefaults, H, LegendSymbol, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var color = Color.parse;\n        var noop = H.noop;\n        var Series = SeriesRegistry.series;\n        var extend = U.extend,\n            isNumber = U.isNumber,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * The ColorAxis object for inclusion in gradient legends.\n         *\n         * @class\n         * @name Highcharts.ColorAxis\n         * @augments Highcharts.Axis\n         *\n         * @param {Highcharts.Chart} chart\n         * The related chart of the color axis.\n         *\n         * @param {Highcharts.ColorAxisOptions} userOptions\n         * The color axis options for initialization.\n         */\n        var ColorAxis = /** @class */ (function (_super) {\n                __extends(ColorAxis, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function ColorAxis(chart, userOptions) {\n                var _this = _super.call(this,\n                    chart,\n                    userOptions) || this;\n                // Prevents unnecessary padding with `hc-more`\n                _this.beforePadding = false;\n                _this.chart = void 0;\n                _this.coll = 'colorAxis';\n                _this.dataClasses = void 0;\n                _this.legendItem = void 0;\n                _this.legendItems = void 0;\n                _this.name = ''; // Prevents 'undefined' in legend in IE8\n                _this.options = void 0;\n                _this.stops = void 0;\n                _this.visible = true;\n                _this.init(chart, userOptions);\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            ColorAxis.compose = function (ChartClass, FxClass, LegendClass, SeriesClass) {\n                ColorAxisComposition.compose(ColorAxis, ChartClass, FxClass, LegendClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the color axis.\n             *\n             * @function Highcharts.ColorAxis#init\n             *\n             * @param {Highcharts.Chart} chart\n             * The related chart of the color axis.\n             *\n             * @param {Highcharts.ColorAxisOptions} userOptions\n             * The color axis options for initialization.\n             */\n            ColorAxis.prototype.init = function (chart, userOptions) {\n                var axis = this;\n                var legend = chart.options.legend || {},\n                    horiz = userOptions.layout ?\n                        userOptions.layout !== 'vertical' :\n                        legend.layout !== 'vertical',\n                    visible = userOptions.visible;\n                var options = merge(ColorAxis.defaultColorAxisOptions,\n                    userOptions, {\n                        showEmpty: false,\n                        title: null,\n                        visible: legend.enabled && visible !== false\n                    });\n                axis.coll = 'colorAxis';\n                axis.side = userOptions.side || horiz ? 2 : 1;\n                axis.reversed = userOptions.reversed || !horiz;\n                axis.opposite = !horiz;\n                _super.prototype.init.call(this, chart, options);\n                // #16053: Restore the actual userOptions.visible so the color axis\n                // doesnt stay hidden forever when hiding and showing legend\n                axis.userOptions.visible = visible;\n                // Base init() pushes it to the xAxis array, now pop it again\n                // chart[this.isXAxis ? 'xAxis' : 'yAxis'].pop();\n                // Prepare data classes\n                if (userOptions.dataClasses) {\n                    axis.initDataClasses(userOptions);\n                }\n                axis.initStops();\n                // Override original axis properties\n                axis.horiz = horiz;\n                axis.zoomEnabled = false;\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.initDataClasses = function (userOptions) {\n                var axis = this,\n                    chart = axis.chart,\n                    options = axis.options,\n                    len = userOptions.dataClasses.length;\n                var dataClasses,\n                    colorCounter = 0,\n                    colorCount = chart.options.chart.colorCount;\n                axis.dataClasses = dataClasses = [];\n                axis.legendItems = [];\n                (userOptions.dataClasses || []).forEach(function (dataClass, i) {\n                    var colors;\n                    dataClass = merge(dataClass);\n                    dataClasses.push(dataClass);\n                    if (!chart.styledMode && dataClass.color) {\n                        return;\n                    }\n                    if (options.dataClassColor === 'category') {\n                        if (!chart.styledMode) {\n                            colors = chart.options.colors;\n                            colorCount = colors.length;\n                            dataClass.color = colors[colorCounter];\n                        }\n                        dataClass.colorIndex = colorCounter;\n                        // increase and loop back to zero\n                        colorCounter++;\n                        if (colorCounter === colorCount) {\n                            colorCounter = 0;\n                        }\n                    }\n                    else {\n                        dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), len < 2 ? 0.5 : i / (len - 1) // #3219\n                        );\n                    }\n                });\n            };\n            /**\n             * Returns true if the series has points at all.\n             *\n             * @function Highcharts.ColorAxis#hasData\n             *\n             * @return {boolean}\n             * True, if the series has points, otherwise false.\n             */\n            ColorAxis.prototype.hasData = function () {\n                return !!(this.tickPositions || []).length;\n            };\n            /**\n             * Override so that ticks are not added in data class axes (#6914)\n             * @private\n             */\n            ColorAxis.prototype.setTickPositions = function () {\n                if (!this.dataClasses) {\n                    return _super.prototype.setTickPositions.call(this);\n                }\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.initStops = function () {\n                var axis = this;\n                axis.stops = axis.options.stops || [\n                    [0, axis.options.minColor],\n                    [1, axis.options.maxColor]\n                ];\n                axis.stops.forEach(function (stop) {\n                    stop.color = color(stop[1]);\n                });\n            };\n            /**\n             * Extend the setOptions method to process extreme colors and color stops.\n             * @private\n             */\n            ColorAxis.prototype.setOptions = function (userOptions) {\n                var axis = this;\n                _super.prototype.setOptions.call(this, userOptions);\n                axis.options.crosshair = axis.options.marker;\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setAxisSize = function () {\n                var axis = this;\n                var symbol = axis.legendSymbol;\n                var chart = axis.chart;\n                var legendOptions = chart.options.legend || {};\n                var x,\n                    y,\n                    width,\n                    height;\n                if (symbol) {\n                    this.left = x = symbol.attr('x');\n                    this.top = y = symbol.attr('y');\n                    this.width = width = symbol.attr('width');\n                    this.height = height = symbol.attr('height');\n                    this.right = chart.chartWidth - x - width;\n                    this.bottom = chart.chartHeight - y - height;\n                    this.len = this.horiz ? width : height;\n                    this.pos = this.horiz ? x : y;\n                }\n                else {\n                    // Fake length for disabled legend to avoid tick issues\n                    // and such (#5205)\n                    this.len = (this.horiz ?\n                        legendOptions.symbolWidth :\n                        legendOptions.symbolHeight) || ColorAxis.defaultLegendLength;\n                }\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.normalizedValue = function (value) {\n                var axis = this;\n                if (axis.logarithmic) {\n                    value = axis.logarithmic.log2lin(value);\n                }\n                return 1 - ((axis.max - value) /\n                    ((axis.max - axis.min) || 1));\n            };\n            /**\n             * Translate from a value to a color.\n             * @private\n             */\n            ColorAxis.prototype.toColor = function (value, point) {\n                var axis = this;\n                var dataClasses = axis.dataClasses;\n                var stops = axis.stops;\n                var pos,\n                    from,\n                    to,\n                    color,\n                    dataClass,\n                    i;\n                if (dataClasses) {\n                    i = dataClasses.length;\n                    while (i--) {\n                        dataClass = dataClasses[i];\n                        from = dataClass.from;\n                        to = dataClass.to;\n                        if ((typeof from === 'undefined' || value >= from) &&\n                            (typeof to === 'undefined' || value <= to)) {\n                            color = dataClass.color;\n                            if (point) {\n                                point.dataClass = i;\n                                point.colorIndex = dataClass.colorIndex;\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    pos = axis.normalizedValue(value);\n                    i = stops.length;\n                    while (i--) {\n                        if (pos > stops[i][0]) {\n                            break;\n                        }\n                    }\n                    from = stops[i] || stops[i + 1];\n                    to = stops[i + 1] || from;\n                    // The position within the gradient\n                    pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n                    color = from.color.tweenTo(to.color, pos);\n                }\n                return color;\n            };\n            /**\n             * Override the getOffset method to add the whole axis groups inside the\n             * legend.\n             * @private\n             */\n            ColorAxis.prototype.getOffset = function () {\n                var axis = this;\n                var group = axis.legendGroup;\n                var sideOffset = axis.chart.axisOffset[axis.side];\n                if (group) {\n                    // Hook for the getOffset method to add groups to this parent\n                    // group\n                    axis.axisParent = group;\n                    // Call the base\n                    _super.prototype.getOffset.call(this);\n                    var legend_1 = this.chart.legend;\n                    // Adds `maxLabelLength` needed for label padding corrections done\n                    // by `render()` and `getMargins()` (#15551).\n                    legend_1.allItems.forEach(function (item) {\n                        if (item instanceof ColorAxis) {\n                            item.drawLegendSymbol(legend_1, item);\n                        }\n                    });\n                    legend_1.render();\n                    this.chart.getMargins(true);\n                    // First time only\n                    if (!axis.added) {\n                        axis.added = true;\n                        axis.labelLeft = 0;\n                        axis.labelRight = axis.width;\n                    }\n                    // Reset it to avoid color axis reserving space\n                    axis.chart.axisOffset[axis.side] = sideOffset;\n                }\n            };\n            /**\n             * Create the color gradient.\n             * @private\n             */\n            ColorAxis.prototype.setLegendColor = function () {\n                var axis = this;\n                var horiz = axis.horiz;\n                var reversed = axis.reversed;\n                var one = reversed ? 1 : 0;\n                var zero = reversed ? 0 : 1;\n                var grad = horiz ? [one, 0,\n                    zero, 0] : [0,\n                    zero, 0,\n                    one]; // #3190\n                    axis.legendColor = {\n                        linearGradient: {\n                            x1: grad[0],\n                            y1: grad[1],\n                            x2: grad[2],\n                            y2: grad[3]\n                        },\n                        stops: axis.stops\n                    };\n            };\n            /**\n             * The color axis appears inside the legend and has its own legend symbol.\n             * @private\n             */\n            ColorAxis.prototype.drawLegendSymbol = function (legend, item) {\n                var axis = this;\n                var padding = legend.padding;\n                var legendOptions = legend.options;\n                var horiz = axis.horiz;\n                var width = pick(legendOptions.symbolWidth,\n                    horiz ? ColorAxis.defaultLegendLength : 12);\n                var height = pick(legendOptions.symbolHeight,\n                    horiz ? 12 : ColorAxis.defaultLegendLength);\n                var labelPadding = pick(\n                    // @todo: This option is not documented, nor implemented when\n                    // vertical\n                    legendOptions.labelPadding,\n                    horiz ? 16 : 30);\n                var itemDistance = pick(legendOptions.itemDistance, 10);\n                this.setLegendColor();\n                // Create the gradient\n                if (!item.legendSymbol) {\n                    item.legendSymbol = this.chart.renderer.rect(0, legend.baseline - 11, width, height).attr({\n                        zIndex: 1\n                    }).add(item.legendGroup);\n                }\n                // Set how much space this legend item takes up\n                axis.legendItemWidth = (width +\n                    padding +\n                    (horiz ?\n                        itemDistance :\n                        this.options.labels.x + this.maxLabelLength));\n                axis.legendItemHeight = height + padding + (horiz ? labelPadding : 0);\n            };\n            /**\n             * Fool the legend.\n             * @private\n             */\n            ColorAxis.prototype.setState = function (state) {\n                this.series.forEach(function (series) {\n                    series.setState(state);\n                });\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setVisible = function () {\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getSeriesExtremes = function () {\n                var axis = this;\n                var series = axis.series;\n                var colorValArray,\n                    colorKey,\n                    colorValIndex,\n                    pointArrayMap,\n                    calculatedExtremes,\n                    cSeries,\n                    i = series.length,\n                    yData,\n                    j;\n                this.dataMin = Infinity;\n                this.dataMax = -Infinity;\n                while (i--) { // x, y, value, other\n                    cSeries = series[i];\n                    colorKey = cSeries.colorKey = pick(cSeries.options.colorKey, cSeries.colorKey, cSeries.pointValKey, cSeries.zoneAxis, 'y');\n                    pointArrayMap = cSeries.pointArrayMap;\n                    calculatedExtremes = cSeries[colorKey + 'Min'] &&\n                        cSeries[colorKey + 'Max'];\n                    if (cSeries[colorKey + 'Data']) {\n                        colorValArray = cSeries[colorKey + 'Data'];\n                    }\n                    else {\n                        if (!pointArrayMap) {\n                            colorValArray = cSeries.yData;\n                        }\n                        else {\n                            colorValArray = [];\n                            colorValIndex = pointArrayMap.indexOf(colorKey);\n                            yData = cSeries.yData;\n                            if (colorValIndex >= 0 && yData) {\n                                for (j = 0; j < yData.length; j++) {\n                                    colorValArray.push(pick(yData[j][colorValIndex], yData[j]));\n                                }\n                            }\n                        }\n                    }\n                    // If color key extremes are already calculated, use them.\n                    if (calculatedExtremes) {\n                        cSeries.minColorValue = cSeries[colorKey + 'Min'];\n                        cSeries.maxColorValue = cSeries[colorKey + 'Max'];\n                    }\n                    else {\n                        var cExtremes = Series.prototype.getExtremes.call(cSeries,\n                            colorValArray);\n                        cSeries.minColorValue = cExtremes.dataMin;\n                        cSeries.maxColorValue = cExtremes.dataMax;\n                    }\n                    if (typeof cSeries.minColorValue !== 'undefined') {\n                        this.dataMin =\n                            Math.min(this.dataMin, cSeries.minColorValue);\n                        this.dataMax =\n                            Math.max(this.dataMax, cSeries.maxColorValue);\n                    }\n                    if (!calculatedExtremes) {\n                        Series.prototype.applyExtremes.call(cSeries);\n                    }\n                }\n            };\n            /**\n             * Internal function to draw a crosshair.\n             *\n             * @function Highcharts.ColorAxis#drawCrosshair\n             *\n             * @param {Highcharts.PointerEventObject} [e]\n             *        The event arguments from the modified pointer event, extended with\n             *        `chartX` and `chartY`\n             *\n             * @param {Highcharts.Point} [point]\n             *        The Point object if the crosshair snaps to points.\n             *\n             * @emits Highcharts.ColorAxis#event:afterDrawCrosshair\n             * @emits Highcharts.ColorAxis#event:drawCrosshair\n             */\n            ColorAxis.prototype.drawCrosshair = function (e, point) {\n                var axis = this;\n                var plotX = point && point.plotX;\n                var plotY = point && point.plotY;\n                var axisPos = axis.pos;\n                var axisLen = axis.len;\n                var crossPos;\n                if (point) {\n                    crossPos = axis.toPixels(point.getNestedProperty(point.series.colorKey));\n                    if (crossPos < axisPos) {\n                        crossPos = axisPos - 2;\n                    }\n                    else if (crossPos > axisPos + axisLen) {\n                        crossPos = axisPos + axisLen + 2;\n                    }\n                    point.plotX = crossPos;\n                    point.plotY = axis.len - crossPos;\n                    _super.prototype.drawCrosshair.call(this, e, point);\n                    point.plotX = plotX;\n                    point.plotY = plotY;\n                    if (axis.cross &&\n                        !axis.cross.addedToColorAxis &&\n                        axis.legendGroup) {\n                        axis.cross\n                            .addClass('highcharts-coloraxis-marker')\n                            .add(axis.legendGroup);\n                        axis.cross.addedToColorAxis = true;\n                        if (!axis.chart.styledMode &&\n                            typeof axis.crosshair === 'object') {\n                            axis.cross.attr({\n                                fill: axis.crosshair.color\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getPlotLinePath = function (options) {\n                var axis = this,\n                    left = axis.left,\n                    pos = options.translatedValue,\n                    top = axis.top;\n                // crosshairs only\n                return isNumber(pos) ? // pos can be 0 (#3969)\n                    (axis.horiz ? [\n                        ['M', pos - 4, top - 6],\n                        ['L', pos + 4, top - 6],\n                        ['L', pos, top],\n                        ['Z']\n                    ] : [\n                        ['M', left, pos],\n                        ['L', left - 6, pos + 6],\n                        ['L', left - 6, pos - 6],\n                        ['Z']\n                    ]) :\n                    _super.prototype.getPlotLinePath.call(this, options);\n            };\n            /**\n             * Updates a color axis instance with a new set of options. The options are\n             * merged with the existing options, so only new or altered options need to\n             * be specified.\n             *\n             * @function Highcharts.ColorAxis#update\n             *\n             * @param {Highcharts.ColorAxisOptions} newOptions\n             * The new options that will be merged in with existing options on the color\n             * axis.\n             *\n             * @param {boolean} [redraw]\n             * Whether to redraw the chart after the color axis is altered. If doing\n             * more operations on the chart, it is a good idea to set redraw to `false`\n             * and call {@link Highcharts.Chart#redraw} after.\n             */\n            ColorAxis.prototype.update = function (newOptions, redraw) {\n                var axis = this,\n                    chart = axis.chart,\n                    legend = chart.legend;\n                this.series.forEach(function (series) {\n                    // Needed for Axis.update when choropleth colors change\n                    series.isDirtyData = true;\n                });\n                // When updating data classes, destroy old items and make sure new\n                // ones are created (#3207)\n                if (newOptions.dataClasses && legend.allItems || axis.dataClasses) {\n                    axis.destroyItems();\n                }\n                _super.prototype.update.call(this, newOptions, redraw);\n                if (axis.legendItem) {\n                    axis.setLegendColor();\n                    legend.colorizeItem(this, true);\n                }\n            };\n            /**\n             * Destroy color axis legend items.\n             * @private\n             */\n            ColorAxis.prototype.destroyItems = function () {\n                var axis = this;\n                var chart = axis.chart;\n                if (axis.legendItem) {\n                    chart.legend.destroyItem(axis);\n                }\n                else if (axis.legendItems) {\n                    axis.legendItems.forEach(function (item) {\n                        chart.legend.destroyItem(item);\n                    });\n                }\n                chart.isDirtyLegend = true;\n            };\n            //   Removing the whole axis (#14283)\n            ColorAxis.prototype.destroy = function () {\n                this.chart.isDirtyLegend = true;\n                this.destroyItems();\n                _super.prototype.destroy.apply(this, [].slice.call(arguments));\n            };\n            /**\n             * Removes the color axis and the related legend item.\n             *\n             * @function Highcharts.ColorAxis#remove\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart following the remove.\n             */\n            ColorAxis.prototype.remove = function (redraw) {\n                this.destroyItems();\n                _super.prototype.remove.call(this, redraw);\n            };\n            /**\n             * Get the legend item symbols for data classes.\n             * @private\n             */\n            ColorAxis.prototype.getDataClassLegendSymbols = function () {\n                var axis = this;\n                var chart = axis.chart;\n                var legendItems = axis.legendItems;\n                var legendOptions = chart.options.legend;\n                var valueDecimals = legendOptions.valueDecimals;\n                var valueSuffix = legendOptions.valueSuffix || '';\n                var name;\n                if (!legendItems.length) {\n                    axis.dataClasses.forEach(function (dataClass, i) {\n                        var from = dataClass.from,\n                            to = dataClass.to,\n                            numberFormatter = chart.numberFormatter;\n                        var vis = true;\n                        // Assemble the default name. This can be overridden\n                        // by legend.options.labelFormatter\n                        name = '';\n                        if (typeof from === 'undefined') {\n                            name = '< ';\n                        }\n                        else if (typeof to === 'undefined') {\n                            name = '> ';\n                        }\n                        if (typeof from !== 'undefined') {\n                            name += numberFormatter(from, valueDecimals) + valueSuffix;\n                        }\n                        if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n                            name += ' - ';\n                        }\n                        if (typeof to !== 'undefined') {\n                            name += numberFormatter(to, valueDecimals) + valueSuffix;\n                        }\n                        // Add a mock object to the legend items\n                        legendItems.push(extend({\n                            chart: chart,\n                            name: name,\n                            options: {},\n                            drawLegendSymbol: LegendSymbol.drawRectangle,\n                            visible: true,\n                            setState: noop,\n                            isDataClass: true,\n                            setVisible: function () {\n                                this.visible = vis = axis.visible = !vis;\n                                axis.series.forEach(function (series) {\n                                    series.points.forEach(function (point) {\n                                        if (point.dataClass === i) {\n                                            point.setVisible(vis);\n                                        }\n                                    });\n                                });\n                                chart.legend.colorizeItem(this, vis);\n                            }\n                        }, dataClass));\n                    });\n                }\n                return legendItems;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ColorAxis.defaultColorAxisOptions = ColorAxisDefaults;\n            ColorAxis.defaultLegendLength = 200;\n            /**\n             * @private\n             */\n            ColorAxis.keepProps = [\n                'legendGroup',\n                'legendItemHeight',\n                'legendItemWidth',\n                'legendItem',\n                'legendSymbol'\n            ];\n            return ColorAxis;\n        }(Axis));\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Properties to preserve after destroy, for Axis.update (#5881, #6025).\n        Array.prototype.push.apply(Axis.keepProps, ColorAxis.keepProps);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Color axis types\n         *\n         * @typedef {\"linear\"|\"logarithmic\"} Highcharts.ColorAxisTypeValue\n         */\n        ''; // detach doclet above\n\n        return ColorAxis;\n    });\n    _registerModule(_modules, 'Series/ColorMapComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = SeriesRegistry.seriesTypes.column.prototype;\n        var addEvent = U.addEvent,\n            defined = U.defined;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ColorMapComposition;\n        (function (ColorMapComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedClasses = [];\n            ColorMapComposition.pointMembers = {\n                dataLabelOnNull: true,\n                moveToTopOnHover: true,\n                isValid: pointIsValid\n            };\n            ColorMapComposition.seriesMembers = {\n                colorKey: 'value',\n                axisTypes: ['xAxis', 'yAxis', 'colorAxis'],\n                parallelArrays: ['x', 'y', 'value'],\n                pointArrayMap: ['value'],\n                trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n                colorAttribs: seriesColorAttribs,\n                pointAttribs: columnProto.pointAttribs\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                var PointClass = SeriesClass.prototype.pointClass;\n                if (composedClasses.indexOf(PointClass) === -1) {\n                    composedClasses.push(PointClass);\n                    addEvent(PointClass, 'afterSetState', onPointAfterSetState);\n                }\n                return SeriesClass;\n            }\n            ColorMapComposition.compose = compose;\n            /**\n             * Move points to the top of the z-index order when hovered.\n             * @private\n             */\n            function onPointAfterSetState(e) {\n                var point = this;\n                if (point.moveToTopOnHover && point.graphic) {\n                    point.graphic.attr({\n                        zIndex: e && e.state === 'hover' ? 1 : 0\n                    });\n                }\n            }\n            /**\n             * Color points have a value option that determines whether or not it is\n             * a null point\n             * @private\n             */\n            function pointIsValid() {\n                return (this.value !== null &&\n                    this.value !== Infinity &&\n                    this.value !== -Infinity &&\n                    // undefined is allowed, but NaN is not (#17279)\n                    (this.value === void 0 || !isNaN(this.value)));\n            }\n            /**\n             * Get the color attibutes to apply on the graphic\n             * @private\n             * @function Highcharts.colorMapSeriesMixin.colorAttribs\n             * @param {Highcharts.Point} point\n             * @return {Highcharts.SVGAttributes}\n             *         The SVG attributes\n             */\n            function seriesColorAttribs(point) {\n                var ret = {};\n                if (defined(point.color) &&\n                    (!point.state || point.state === 'normal') // #15746\n                ) {\n                    ret[this.colorProp || 'fill'] = point.color;\n                }\n                return ret;\n            }\n        })(ColorMapComposition || (ColorMapComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorMapComposition;\n    });\n    _registerModule(_modules, 'Series/Heatmap/HeatmapPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ScatterPoint = SeriesRegistry.seriesTypes.scatter.prototype.pointClass;\n        var clamp = U.clamp,\n            defined = U.defined,\n            extend = U.extend,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HeatmapPoint = /** @class */ (function (_super) {\n                __extends(HeatmapPoint, _super);\n            function HeatmapPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                _this.value = void 0;\n                _this.x = void 0;\n                _this.y = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            HeatmapPoint.prototype.applyOptions = function (options, x) {\n                var point = _super.prototype.applyOptions.call(this,\n                    options,\n                    x);\n                point.formatPrefix = point.isNull || point.value === null ?\n                    'null' : 'point';\n                return point;\n            };\n            HeatmapPoint.prototype.getCellAttributes = function () {\n                var point = this,\n                    series = point.series,\n                    seriesOptions = series.options,\n                    xPad = (seriesOptions.colsize || 1) / 2,\n                    yPad = (seriesOptions.rowsize || 1) / 2,\n                    xAxis = series.xAxis,\n                    yAxis = series.yAxis,\n                    markerOptions = point.options.marker || series.options.marker,\n                    pointPlacement = series.pointPlacementToXValue(), // #7860\n                    pointPadding = pick(point.pointPadding,\n                    seriesOptions.pointPadding, 0),\n                    cellAttr = {\n                        x1: clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x - xPad,\n                    false,\n                    true,\n                    false,\n                    true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n                        x2: clamp(Math.round(xAxis.len -\n                            xAxis.translate(point.x + xPad,\n                    false,\n                    true,\n                    false,\n                    true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n                        y1: clamp(Math.round(yAxis.translate(point.y - yPad,\n                    false,\n                    true,\n                    false,\n                    true)), -yAxis.len, 2 * yAxis.len),\n                        y2: clamp(Math.round(yAxis.translate(point.y + yPad,\n                    false,\n                    true,\n                    false,\n                    true)), -yAxis.len, 2 * yAxis.len)\n                    };\n                var dimensions = [['width', 'x'], ['height', 'y']];\n                // Handle marker's fixed width, and height values including border\n                // and pointPadding while calculating cell attributes.\n                dimensions.forEach(function (dimension) {\n                    var prop = dimension[0],\n                        direction = dimension[1];\n                    var start = direction + '1', end = direction + '2';\n                    var side = Math.abs(cellAttr[start] - cellAttr[end]),\n                        borderWidth = markerOptions &&\n                            markerOptions.lineWidth || 0,\n                        plotPos = Math.abs(cellAttr[start] + cellAttr[end]) / 2,\n                        widthOrHeight = markerOptions && markerOptions[prop];\n                    if (defined(widthOrHeight) && widthOrHeight < side) {\n                        var halfCellSize = widthOrHeight / 2 + borderWidth / 2;\n                        cellAttr[start] = plotPos - halfCellSize;\n                        cellAttr[end] = plotPos + halfCellSize;\n                    }\n                    // Handle pointPadding\n                    if (pointPadding) {\n                        if (direction === 'y') {\n                            start = end;\n                            end = direction + '1';\n                        }\n                        cellAttr[start] += pointPadding;\n                        cellAttr[end] -= pointPadding;\n                    }\n                });\n                return cellAttr;\n            };\n            /**\n             * @private\n             */\n            HeatmapPoint.prototype.haloPath = function (size) {\n                if (!size) {\n                    return [];\n                }\n                var rect = this.shapeArgs;\n                return [\n                    'M',\n                    rect.x - size,\n                    rect.y - size,\n                    'L',\n                    rect.x - size,\n                    rect.y + rect.height + size,\n                    rect.x + rect.width + size,\n                    rect.y + rect.height + size,\n                    rect.x + rect.width + size,\n                    rect.y - size,\n                    'Z'\n                ];\n            };\n            /**\n             * Color points have a value option that determines whether or not it is\n             * a null point\n             * @private\n             */\n            HeatmapPoint.prototype.isValid = function () {\n                // undefined is allowed\n                return (this.value !== Infinity &&\n                    this.value !== -Infinity);\n            };\n            return HeatmapPoint;\n        }(ScatterPoint));\n        extend(HeatmapPoint.prototype, {\n            dataLabelOnNull: true,\n            moveToTopOnHover: true,\n            ttBelow: false\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeatmapPoint;\n    });\n    _registerModule(_modules, 'Series/Heatmap/HeatmapSeries.js', [_modules['Core/Color/Color.js'], _modules['Series/ColorMapComposition.js'], _modules['Series/Heatmap/HeatmapPoint.js'], _modules['Core/Legend/LegendSymbol.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js']], function (Color, ColorMapComposition, HeatmapPoint, LegendSymbol, SeriesRegistry, SVGRenderer, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series,\n            _a = SeriesRegistry.seriesTypes,\n            ColumnSeries = _a.column,\n            ScatterSeries = _a.scatter;\n        var symbols = SVGRenderer.prototype.symbols;\n        var extend = U.extend,\n            fireEvent = U.fireEvent,\n            isNumber = U.isNumber,\n            merge = U.merge,\n            pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.heatmap\n         *\n         * @augments Highcharts.Series\n         */\n        var HeatmapSeries = /** @class */ (function (_super) {\n                __extends(HeatmapSeries, _super);\n            function HeatmapSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.colorAxis = void 0;\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                _this.valueMax = NaN;\n                _this.valueMin = NaN;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.drawPoints = function () {\n                var _this = this;\n                // In styled mode, use CSS, otherwise the fill used in the style\n                // sheet will take precedence over the fill attribute.\n                var seriesMarkerOptions = this.options.marker || {};\n                if (seriesMarkerOptions.enabled || this._hasPointMarkers) {\n                    Series.prototype.drawPoints.call(this);\n                    this.points.forEach(function (point) {\n                        if (point.graphic) {\n                            point.graphic[_this.chart.styledMode ? 'css' : 'animate'](_this.colorAttribs(point));\n                            if (point.value === null) { // #15708\n                                point.graphic.addClass('highcharts-null-point');\n                            }\n                        }\n                    });\n                }\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.getExtremes = function () {\n                // Get the extremes from the value data\n                var _a = Series.prototype.getExtremes\n                        .call(this,\n                    this.valueData),\n                    dataMin = _a.dataMin,\n                    dataMax = _a.dataMax;\n                if (isNumber(dataMin)) {\n                    this.valueMin = dataMin;\n                }\n                if (isNumber(dataMax)) {\n                    this.valueMax = dataMax;\n                }\n                // Get the extremes from the y data\n                return Series.prototype.getExtremes.call(this);\n            };\n            /**\n             * Override to also allow null points, used when building the k-d-tree for\n             * tooltips in boost mode.\n             * @private\n             */\n            HeatmapSeries.prototype.getValidPoints = function (points, insideOnly) {\n                return Series.prototype.getValidPoints.call(this, points, insideOnly, true);\n            };\n            /**\n             * Define hasData function for non-cartesian series. Returns true if the\n             * series has points at all.\n             * @private\n             */\n            HeatmapSeries.prototype.hasData = function () {\n                return !!this.processedXData.length; // != 0\n            };\n            /**\n             * Override the init method to add point ranges on both axes.\n             * @private\n             */\n            HeatmapSeries.prototype.init = function () {\n                var options;\n                Series.prototype.init.apply(this, arguments);\n                options = this.options;\n                // #3758, prevent resetting in setData\n                options.pointRange = pick(options.pointRange, options.colsize || 1);\n                // general point range\n                this.yAxis.axisPointRange = options.rowsize || 1;\n                // Bind new symbol names\n                symbols.ellipse = symbols.circle;\n                // @todo\n                //\n                // Setting the border radius here is a workaround. It should be set in\n                // the shapeArgs or returned from `markerAttribs`. However,\n                // Series.drawPoints does not pick up markerAttribs to be passed over to\n                // `renderer.symbol`. Also, image symbols are not positioned by their\n                // top left corner like other symbols are. This should be refactored,\n                // then we could save ourselves some tests for .hasImage etc. And the\n                // evaluation of borderRadius would be moved to `markerAttribs`.\n                if (options.marker) {\n                    options.marker.r = options.borderRadius;\n                }\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.markerAttribs = function (point, state) {\n                var pointMarkerOptions = point.marker || {},\n                    seriesMarkerOptions = this.options.marker || {},\n                    seriesStateOptions,\n                    pointStateOptions,\n                    shapeArgs = point.shapeArgs || {},\n                    hasImage = point.hasImage,\n                    attribs = {};\n                if (hasImage) {\n                    return {\n                        x: point.plotX,\n                        y: point.plotY\n                    };\n                }\n                // Setting width and height attributes on image does not affect on its\n                // dimensions.\n                if (state) {\n                    seriesStateOptions = (seriesMarkerOptions.states[state] || {});\n                    pointStateOptions = pointMarkerOptions.states &&\n                        pointMarkerOptions.states[state] || {};\n                    [['width', 'x'], ['height', 'y']].forEach(function (dimension) {\n                        // Set new width and height basing on state options.\n                        attribs[dimension[0]] = (pointStateOptions[dimension[0]] ||\n                            seriesStateOptions[dimension[0]] ||\n                            shapeArgs[dimension[0]]) + (pointStateOptions[dimension[0] + 'Plus'] ||\n                            seriesStateOptions[dimension[0] + 'Plus'] || 0);\n                        // Align marker by a new size.\n                        attribs[dimension[1]] =\n                            shapeArgs[dimension[1]] +\n                                (shapeArgs[dimension[0]] -\n                                    attribs[dimension[0]]) / 2;\n                    });\n                }\n                return state ? attribs : shapeArgs;\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.pointAttribs = function (point, state) {\n                var series = this,\n                    attr = Series.prototype.pointAttribs.call(series,\n                    point,\n                    state),\n                    seriesOptions = series.options || {},\n                    plotOptions = series.chart.options.plotOptions || {},\n                    seriesPlotOptions = plotOptions.series || {},\n                    heatmapPlotOptions = plotOptions.heatmap || {},\n                    stateOptions,\n                    brightness, \n                    // Get old properties in order to keep backward compatibility\n                    borderColor = (point && point.options.borderColor) ||\n                        seriesOptions.borderColor ||\n                        heatmapPlotOptions.borderColor ||\n                        seriesPlotOptions.borderColor,\n                    borderWidth = (point && point.options.borderWidth) ||\n                        seriesOptions.borderWidth ||\n                        heatmapPlotOptions.borderWidth ||\n                        seriesPlotOptions.borderWidth ||\n                        attr['stroke-width'];\n                // Apply lineColor, or set it to default series color.\n                attr.stroke = ((point && point.marker && point.marker.lineColor) ||\n                    (seriesOptions.marker && seriesOptions.marker.lineColor) ||\n                    borderColor ||\n                    this.color);\n                // Apply old borderWidth property if exists.\n                attr['stroke-width'] = borderWidth;\n                if (state) {\n                    stateOptions =\n                        merge(seriesOptions.states[state], seriesOptions.marker &&\n                            seriesOptions.marker.states[state], point &&\n                            point.options.states &&\n                            point.options.states[state] || {});\n                    brightness = stateOptions.brightness;\n                    attr.fill =\n                        stateOptions.color ||\n                            Color.parse(attr.fill).brighten(brightness || 0).get();\n                    attr.stroke = stateOptions.lineColor;\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.setClip = function (animation) {\n                var series = this,\n                    chart = series.chart;\n                Series.prototype.setClip.apply(series, arguments);\n                if (series.options.clip !== false || animation) {\n                    series.markerGroup\n                        .clip((animation || series.clipBox) && series.sharedClipKey ?\n                        chart.sharedClips[series.sharedClipKey] :\n                        chart.clipRect);\n                }\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.translate = function () {\n                var series = this, options = series.options, symbol = options.marker && options.marker.symbol || 'rect', shape = symbols[symbol] ? symbol : 'rect', hasRegularShape = ['circle', 'square'].indexOf(shape) !== -1;\n                series.generatePoints();\n                series.points.forEach(function (point) {\n                    var pointAttr,\n                        sizeDiff,\n                        hasImage,\n                        cellAttr = point.getCellAttributes(),\n                        shapeArgs = {};\n                    shapeArgs.x = Math.min(cellAttr.x1, cellAttr.x2);\n                    shapeArgs.y = Math.min(cellAttr.y1, cellAttr.y2);\n                    shapeArgs.width = Math.max(Math.abs(cellAttr.x2 - cellAttr.x1), 0);\n                    shapeArgs.height = Math.max(Math.abs(cellAttr.y2 - cellAttr.y1), 0);\n                    hasImage = point.hasImage =\n                        (point.marker && point.marker.symbol || symbol || '')\n                            .indexOf('url') === 0;\n                    // If marker shape is regular (symetric), find shorter\n                    // cell's side.\n                    if (hasRegularShape) {\n                        sizeDiff = Math.abs(shapeArgs.width - shapeArgs.height);\n                        shapeArgs.x = Math.min(cellAttr.x1, cellAttr.x2) +\n                            (shapeArgs.width < shapeArgs.height ? 0 : sizeDiff / 2);\n                        shapeArgs.y = Math.min(cellAttr.y1, cellAttr.y2) +\n                            (shapeArgs.width < shapeArgs.height ? sizeDiff / 2 : 0);\n                        shapeArgs.width = shapeArgs.height =\n                            Math.min(shapeArgs.width, shapeArgs.height);\n                    }\n                    pointAttr = {\n                        plotX: (cellAttr.x1 + cellAttr.x2) / 2,\n                        plotY: (cellAttr.y1 + cellAttr.y2) / 2,\n                        clientX: (cellAttr.x1 + cellAttr.x2) / 2,\n                        shapeType: 'path',\n                        shapeArgs: merge(true, shapeArgs, {\n                            d: symbols[shape](shapeArgs.x, shapeArgs.y, shapeArgs.width, shapeArgs.height, { r: options.borderRadius })\n                        })\n                    };\n                    if (hasImage) {\n                        point.marker = {\n                            width: shapeArgs.width,\n                            height: shapeArgs.height\n                        };\n                    }\n                    extend(point, pointAttr);\n                });\n                fireEvent(series, 'afterTranslate');\n            };\n            /**\n             * A heatmap is a graphical representation of data where the individual\n             * values contained in a matrix are represented as colors.\n             *\n             * @productdesc {highcharts}\n             * Requires `modules/heatmap`.\n             *\n             * @sample highcharts/demo/heatmap/\n             *         Simple heatmap\n             * @sample highcharts/demo/heatmap-canvas/\n             *         Heavy heatmap\n             *\n             * @extends      plotOptions.scatter\n             * @excluding    animationLimit, connectEnds, connectNulls, cropThreshold,\n             *               dashStyle, findNearestPointBy, getExtremesFromAll, jitter,\n             *               linecap, lineWidth, pointInterval, pointIntervalUnit,\n             *               pointRange, pointStart, shadow, softThreshold, stacking,\n             *               step, threshold, cluster\n             * @product      highcharts highmaps\n             * @optionparent plotOptions.heatmap\n             */\n            HeatmapSeries.defaultOptions = merge(ScatterSeries.defaultOptions, {\n                /**\n                 * Animation is disabled by default on the heatmap series.\n                 */\n                animation: false,\n                /**\n                 * The border radius for each heatmap item. The border's color and\n                 * width can be set in marker options.\n                 *\n                 * @see [lineColor](#plotOptions.heatmap.marker.lineColor)\n                 * @see [lineWidth](#plotOptions.heatmap.marker.lineWidth)\n                 */\n                borderRadius: 0,\n                /**\n                 * The border width for each heatmap item.\n                 */\n                borderWidth: 0,\n                /**\n                 * Padding between the points in the heatmap.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @since     6.0\n                 * @apioption plotOptions.heatmap.pointPadding\n                 */\n                /**\n                 * @default   value\n                 * @apioption plotOptions.heatmap.colorKey\n                 */\n                /**\n                 * The main color of the series. In heat maps this color is rarely used,\n                 * as we mostly use the color to denote the value of each point. Unless\n                 * options are set in the [colorAxis](#colorAxis), the default value\n                 * is pulled from the [options.colors](#colors) array.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     4.0\n                 * @product   highcharts\n                 * @apioption plotOptions.heatmap.color\n                 */\n                /**\n                 * The column size - how many X axis units each column in the heatmap\n                 * should span.\n                 *\n                 * @sample {highcharts} maps/demo/heatmap/\n                 *         One day\n                 * @sample {highmaps} maps/demo/heatmap/\n                 *         One day\n                 *\n                 * @type      {number}\n                 * @default   1\n                 * @since     4.0\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.colsize\n                 */\n                /**\n                 * The row size - how many Y axis units each heatmap row should span.\n                 *\n                 * @sample {highcharts} maps/demo/heatmap/\n                 *         1 by default\n                 * @sample {highmaps} maps/demo/heatmap/\n                 *         1 by default\n                 *\n                 * @type      {number}\n                 * @default   1\n                 * @since     4.0\n                 * @product   highcharts highmaps\n                 * @apioption plotOptions.heatmap.rowsize\n                 */\n                /**\n                 * The color applied to null points. In styled mode, a general CSS class\n                 * is applied instead.\n                 *\n                 * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                nullColor: \"#f7f7f7\" /* Palette.neutralColor3 */,\n                dataLabels: {\n                    formatter: function () {\n                        var numberFormatter = this.series.chart.numberFormatter;\n                        var value = this.point.value;\n                        return isNumber(value) ? numberFormatter(value, -1) : '';\n                    },\n                    inside: true,\n                    verticalAlign: 'middle',\n                    crop: false,\n                    overflow: false,\n                    padding: 0 // #3837\n                },\n                /**\n                 * @excluding radius, enabledThreshold\n                 * @since     8.1\n                 */\n                marker: {\n                    /**\n                     * A predefined shape or symbol for the marker. When undefined, the\n                     * symbol is pulled from options.symbols. Other possible values are\n                     * `'circle'`, `'square'`,`'diamond'`, `'triangle'`,\n                     * `'triangle-down'`, `'rect'`, and `'ellipse'`.\n                     *\n                     * Additionally, the URL to a graphic can be given on this form:\n                     * `'url(graphic.png)'`. Note that for the image to be applied to\n                     * exported charts, its URL needs to be accessible by the export\n                     * server.\n                     *\n                     * Custom callbacks for symbol path generation can also be added to\n                     * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                     * used by its method name, as shown in the demo.\n                     *\n                     * @sample {highcharts} highcharts/plotoptions/series-marker-symbol/\n                     *         Predefined, graphic and custom markers\n                     * @sample {highstock} highcharts/plotoptions/series-marker-symbol/\n                     *         Predefined, graphic and custom markers\n                     */\n                    symbol: 'rect',\n                    /** @ignore-option */\n                    radius: 0,\n                    lineColor: void 0,\n                    states: {\n                        /**\n                         * @excluding radius, radiusPlus\n                         */\n                        hover: {\n                            /**\n                             * Set the marker's fixed width on hover state.\n                             *\n                             * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                             *         70px fixed marker's width and height on hover\n                             *\n                             * @type      {number|undefined}\n                             * @default   undefined\n                             * @product   highcharts highmaps\n                             * @apioption plotOptions.heatmap.marker.states.hover.width\n                             */\n                            /**\n                             * Set the marker's fixed height on hover state.\n                             *\n                             * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                             *         70px fixed marker's width and height on hover\n                             *\n                             * @type      {number|undefined}\n                             * @default   undefined\n                             * @product   highcharts highmaps\n                             * @apioption plotOptions.heatmap.marker.states.hover.height\n                             */\n                            /**\n                             * The number of pixels to increase the width of the\n                             * selected point.\n                             *\n                             * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                             *         20px greater width and height on hover\n                             *\n                             * @type      {number|undefined}\n                             * @default   undefined\n                             * @product   highcharts highmaps\n                             * @apioption plotOptions.heatmap.marker.states.hover.widthPlus\n                             */\n                            /**\n                             * The number of pixels to increase the height of the\n                             * selected point.\n                             *\n                             * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                            *          20px greater width and height on hover\n                             *\n                             * @type      {number|undefined}\n                             * @default   undefined\n                             * @product   highcharts highmaps\n                             * @apioption plotOptions.heatmap.marker.states.hover.heightPlus\n                             */\n                            /**\n                             * The additional line width for a hovered point.\n                             *\n                             * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                             *         5 pixels wider lineWidth on hover\n                             * @sample {highmaps} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                             *         5 pixels wider lineWidth on hover\n                             */\n                            lineWidthPlus: 0\n                        },\n                        /**\n                         * @excluding radius\n                         */\n                        select: {\n                        /**\n                         * Set the marker's fixed width on select state.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                         *         70px fixed marker's width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.select.width\n                         */\n                        /**\n                         * Set the marker's fixed height on select state.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                         *         70px fixed marker's width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.select.height\n                         */\n                        /**\n                         * The number of pixels to increase the width of the\n                         * selected point.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                         *         20px greater width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.select.widthPlus\n                         */\n                        /**\n                         * The number of pixels to increase the height of the\n                         * selected point.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                         *         20px greater width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.select.heightPlus\n                         */\n                        }\n                    }\n                },\n                clip: true,\n                /** @ignore-option */\n                pointRange: null,\n                tooltip: {\n                    pointFormat: '{point.x}, {point.y}: {point.value}<br/>'\n                },\n                states: {\n                    hover: {\n                        /** @ignore-option */\n                        halo: false,\n                        /**\n                         * How much to brighten the point on interaction. Requires the\n                         * main color to be defined in hex or rgb(a) format.\n                         *\n                         * In styled mode, the hover brightening is by default replaced\n                         * with a fill-opacity set in the `.highcharts-point:hover`\n                         * rule.\n                         */\n                        brightness: 0.2\n                    }\n                }\n            });\n            return HeatmapSeries;\n        }(ScatterSeries));\n        extend(HeatmapSeries.prototype, {\n            axisTypes: ColorMapComposition.seriesMembers.axisTypes,\n            colorKey: ColorMapComposition.seriesMembers.colorKey,\n            directTouch: true,\n            getExtremesFromAll: true,\n            parallelArrays: ColorMapComposition.seriesMembers.parallelArrays,\n            pointArrayMap: ['y', 'value'],\n            pointClass: HeatmapPoint,\n            trackerGroups: ColorMapComposition.seriesMembers.trackerGroups,\n            /**\n             * @private\n             */\n            alignDataLabel: ColumnSeries.prototype.alignDataLabel,\n            colorAttribs: ColorMapComposition.seriesMembers.colorAttribs,\n            /**\n             * @private\n             */\n            drawLegendSymbol: LegendSymbol.drawRectangle,\n            getSymbol: Series.prototype.getSymbol\n        });\n        ColorMapComposition.compose(HeatmapSeries);\n        SeriesRegistry.registerSeriesType('heatmap', HeatmapSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Heatmap series only. Padding between the points in the heatmap.\n         * @name Highcharts.Point#pointPadding\n         * @type {number|undefined}\n         */\n        /**\n         * Heatmap series only. The value of the point, resulting in a color\n         * controled by options as set in the colorAxis configuration.\n         * @name Highcharts.Point#value\n         * @type {number|null|undefined}\n         */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * Heatmap series only. Point padding for a single point.\n        * @name Highcharts.PointOptionsObject#pointPadding\n        * @type {number|undefined}\n        */ /**\n        * Heatmap series only. The value of the point, resulting in a color controled\n        * by options as set in the colorAxis configuration.\n        * @name Highcharts.PointOptionsObject#value\n        * @type {number|null|undefined}\n        */\n        ''; // detach doclets above\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `heatmap` series. If the [type](#series.heatmap.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @productdesc {highcharts}\n         * Requires `modules/heatmap`.\n         *\n         * @extends   series,plotOptions.heatmap\n         * @excluding cropThreshold, dataParser, dataURL, pointRange, stack,\n         * @product   highcharts highmaps\n         * @apioption series.heatmap\n         */\n        /**\n         * An array of data points for the series. For the `heatmap` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 or 2 values. In this case, the values\n         * correspond to `x,y,value`. If the first value is a string, it is\n         * applied as the name of the point, and the `x` value is inferred.\n         * The `x` value can also be omitted, in which case the inner arrays\n         * should be of length 2\\. Then the `x` value is automatically calculated,\n         * either starting at 0 and incremented by 1, or from `pointStart`\n         * and `pointInterval` given in the series options.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 9, 7],\n         *         [1, 10, 4],\n         *         [2, 6, 3]\n         *     ]\n         *  ```\n         *\n         * 2.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.heatmap.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 3,\n         *         value: 10,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 7,\n         *         value: 10,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.line.data\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data\n         */\n        /**\n         * The color of the point. In heat maps the point color is rarely set\n         * explicitly, as we use the color to denote the `value`. Options for\n         * this are set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.color\n         */\n        /**\n         * The value of the point, resulting in a color controled by options\n         * as set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.value\n         */\n        /**\n         * The x value of the point. For datetime axes,\n         * the X value is the timestamp in milliseconds since 1970.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.x\n         */\n        /**\n         * The y value of the point.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.y\n         */\n        /**\n         * Point padding for a single point.\n         *\n         * @sample maps/plotoptions/tilemap-pointpadding\n         *         Point padding on tiles\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.pointPadding\n         */\n        /**\n         * @excluding radius, enabledThreshold\n         * @product   highcharts highmaps\n         * @since     8.1\n         * @apioption series.heatmap.data.marker\n         */\n        /**\n         * @excluding radius, enabledThreshold\n         * @product   highcharts highmaps\n         * @since     8.1\n         * @apioption series.heatmap.marker\n         */\n        /**\n         * @excluding radius, radiusPlus\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover\n         */\n        /**\n         * @excluding radius\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select\n         */\n        /**\n         * @excluding radius, radiusPlus\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover\n         */\n        /**\n         * @excluding radius\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.select\n         */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n        *         5 pixels wider lineWidth on hover\n        *\n        * @type      {number|undefined}\n        * @default   0\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.lineWidthPlus\n        */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n        *         70px fixed marker's width and height on hover\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.width\n        */\n        /**\n         * Set the marker's fixed height on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover.height\n         */\n        /**\n        * The number of pixels to increase the width of the\n        * hovered point.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n        *         One day\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.widthPlus\n        */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover.heightPlus\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select.heightPlus\n         */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n        *         5 pixels wider lineWidth on hover\n        *\n        * @type      {number|undefined}\n        * @default   0\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.data.marker.states.hover.lineWidthPlus\n        */\n        /**\n         * Set the marker's fixed width on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover.width\n         */\n        /**\n         * Set the marker's fixed height on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover.height\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.hover.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.hover.heightPlus\n         */\n        /**\n        * Set the marker's fixed width on select state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n        *         70px fixed marker's width and height on hover\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.data.marker.states.select.width\n        */\n        /**\n         * Set the marker's fixed height on select state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.select.height\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.select.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.select.heightPlus\n         */\n        ''; // adds doclets above to transpiled file\n\n        return HeatmapSeries;\n    });\n    _registerModule(_modules, 'masters/modules/heatmap.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/Color/ColorAxis.js']], function (Highcharts, ColorAxis) {\n\n        var G = Highcharts;\n        G.ColorAxis = ColorAxis;\n        ColorAxis.compose(G.Chart, G.Fx, G.Legend, G.Series);\n\n    });\n}));"]},"metadata":{},"sourceType":"script"}